[{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://epiforesite.github.io/epitraxr/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://epiforesite.github.io/epitraxr/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://epiforesite.github.io/epitraxr/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://epiforesite.github.io/epitraxr/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement @apulsipher. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://epiforesite.github.io/epitraxr/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://epiforesite.github.io/epitraxr/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://epiforesite.github.io/epitraxr/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://epiforesite.github.io/epitraxr/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://epiforesite.github.io/epitraxr/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://epiforesite.github.io/epitraxr/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://epiforesite.github.io/epitraxr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to epitraxr","title":"Contributing to epitraxr","text":"outlines propose change epitraxr.","code":""},{"path":"https://epiforesite.github.io/epitraxr/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to epitraxr","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://epiforesite.github.io/epitraxr/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to epitraxr","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://epiforesite.github.io/epitraxr/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to epitraxr","text":"recommend create Git branch pull request (PR). New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2 Markdown syntax documentation. use tinytest. Generally, contributions must test cases included accept . user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://epiforesite.github.io/epitraxr/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to epitraxr","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://epiforesite.github.io/epitraxr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 epitraxr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://epiforesite.github.io/epitraxr/articles/epitraxr.html","id":"introduction-to-epitraxr","dir":"Articles","previous_headings":"","what":"Introduction to epitraxr","title":"epitraxr","text":"EpiTrax central repository epidemiological data developed Utah State’s Department Health Human Services (DHHS). now used several states. EpiTrax, public health officials access many different types disease surveillance data, use produce regular (e.g., weekly, monthly, annual) reports respective jurisdictions. can tedious, time-intensive process. epitraxr package makes fast easy process EpiTrax data produce multiple reports.","code":""},{"path":"https://epiforesite.github.io/epitraxr/articles/epitraxr.html","id":"epitrax-data","dir":"Articles","previous_headings":"Introduction to epitraxr","what":"EpiTrax Data","title":"epitraxr","text":"explore basic report functions epitraxr, ’ll use sample dataset: export data EpiTrax, row corresponds single disease case. EpiTrax can provide many different data points, epitraxr cares three: patient_disease: disease patient_mmwr_week: week number (1-52) disease onset patient_mmwr_year: year disease onset package ignores columns. Read data read_epitrax_data() function: validates input data converts week number month number (1-12), reports generally use months instead weeks. function also adds counts column (initially rows count 1), used internally manipulating data generating reports.","code":"data_file <- \"vignette-data/epitrax_data.csv\" head(read.csv(data_file)) #>   patient_mmwr_week patient_mmwr_year                      patient_disease #> 1                31              2020 Influenza-associated hospitalization #> 2                51              2019 Influenza-associated hospitalization #> 3                27              2021 Influenza-associated hospitalization #> 4                30              2024       Coronavirus, Novel (2019-nCoV) #> 5                24              2020 Influenza-associated hospitalization #> 6                13              2022 Influenza-associated hospitalization epitrax_data <- read_epitrax_data(data_file) head(epitrax_data) #>                                disease month year counts #> 1 Influenza-associated hospitalization     8 2020      1 #> 2 Influenza-associated hospitalization    12 2019      1 #> 3 Influenza-associated hospitalization     7 2021      1 #> 4       Coronavirus, Novel (2019-nCoV)     7 2024      1 #> 5 Influenza-associated hospitalization     6 2020      1 #> 6 Influenza-associated hospitalization     4 2022      1"},{"path":"https://epiforesite.github.io/epitraxr/articles/epitraxr.html","id":"disease-lists","dir":"Articles","previous_headings":"Introduction to epitraxr","what":"Disease Lists","title":"epitraxr","text":"can generate reports data, epitraxr needs list diseases include report. Often, ’ll two lists, one internal reports one public reports. Read files using functions get_report_diseases_internal() get_report_diseases_public(). internal_diseases two columns. EpiTrax_name disease name reported EpiTrax. internal reports need values column. Group_name grouping diseases, used create_report_grouped_stats(). aren’t creating grouped reports, don’t need Group_name internal disease list. public_diseases also two columns. Like internal_diseases, EpiTrax_name disease name reported EpiTrax. public reports need values column properly compute statistics data. Public_name used certain functions (prefixed create_public_report_) translate EpiTrax disease name something accessible public. Public_name also used combine related diseases final report (e.g., “Syphilis, primary” “Syphilis, secondary” publicly reported collected statistic “Syphilis”).","code":"internal_disease_list <- \"vignette-data/ireport_diseases.csv\" internal_diseases <- get_report_diseases_internal(internal_disease_list) head(internal_diseases) #>                      EpiTrax_name                      Group_name #> 1                         Anthrax                Zoonotic Disease #> 2             Botulism, foodborne                  Enteric Toxins #> 3              Campylobacteriosis       Bacterial Enteric Disease #> 4          Chickenpox (Varicella)    Vaccine-Preventable Diseases #> 5 Chlamydia trachomatis infection Sexually Transmitted Infections #> 6                         Cholera                  Enteric Toxins public_disease_list <- \"vignette-data/preport_diseases.csv\" public_diseases <- get_report_diseases_public(public_disease_list) head(public_diseases) #>                           EpiTrax_name                       Public_name #> 1               Chickenpox (Varicella)                        Chickenpox #> 2      Chlamydia trachomatis infection                         Chlamydia #> 3                  Colorado Tick Fever               Colorado Tick Fever #> 4       Coronavirus, Novel (2019-nCoV)                          COVID-19 #> 5                 HIV Infection, adult Human Immondeficiency Virus (HIV) #> 6 Influenza-associated hospitalization       Influenza (hospitalization)"},{"path":"https://epiforesite.github.io/epitraxr/articles/epitraxr.html","id":"generating-reports-standard-mode","dir":"Articles","previous_headings":"Introduction to epitraxr","what":"Generating Reports: Standard Mode","title":"epitraxr","text":"can now call report generation functions, create_report_annual_counts(), providing list diseases want include report. gives us data frame containing row disease disease list column showing case counts year dataset. Let’s call report function , time give public disease list.","code":"report <- create_report_annual_counts(   data = epitrax_data,   diseases = internal_diseases$EpiTrax_name )  head(report) #>                           disease 2019 2020 2021 2022 2023 2024 #> 1                         Anthrax    0    0    0    0    0    0 #> 2             Botulism, foodborne    0    0    0    0    0    0 #> 3              Campylobacteriosis    0    0    0    0    0    0 #> 4          Chickenpox (Varicella)  218  318  263  234  249  292 #> 5 Chlamydia trachomatis infection    0    0    0    0    0    0 #> 6                         Cholera    0    0    0    0    0    0 report <- create_report_annual_counts(   data = epitrax_data,   diseases = public_diseases$EpiTrax_name )  head(report) #>                                disease 2019 2020 2021 2022 2023 2024 #> 1               Chickenpox (Varicella)  218  318  263  234  249  292 #> 2      Chlamydia trachomatis infection    0    0    0    0    0    0 #> 3                  Colorado Tick Fever    0    0    0    0    0    0 #> 4       Coronavirus, Novel (2019-nCoV) 1014 1627 2398 1855  908 1191 #> 5                 HIV Infection, adult    0    0    0    0    0    0 #> 6 Influenza-associated hospitalization  625 1733 1889 2289 1664 1466"},{"path":"https://epiforesite.github.io/epitraxr/articles/epitraxr.html","id":"generating-reports-piped-mode-recommended","dir":"Articles","previous_headings":"Introduction to epitraxr","what":"Generating Reports: Piped Mode (recommended)","title":"epitraxr","text":"epitraxr package includes separate piped mode make easy chain together multiple reports without needing specify disease list input data time. recommended mode epitraxr. See vignette(\"piped-mode\") information. brief example annual counts report generation work piped mode. Piped mode really shines ’re creating multiple reports .","code":"# Data and configuration files data_file <- \"vignette-data/epitrax_data.csv\" config_file <- \"vignette-data/config.yaml\" disease_lists <- list(   internal = \"vignette-data/ireport_diseases.csv\",   public = \"vignette-data/preport_diseases.csv\" )  # Run pipe epitrax <- create_epitrax_from_file(data_file) |>   epitrax_set_config_from_file(config_file) |>   epitrax_set_report_diseases(disease_lists) |>   epitrax_ireport_annual_counts()  # View report head(epitrax$internal_reports$annual_counts) #>                           disease 2019 2020 2021 2022 2023 2024 #> 1                         Anthrax    0    0    0    0    0    0 #> 2             Botulism, foodborne    0    0    0    0    0    0 #> 3              Campylobacteriosis    0    0    0    0    0    0 #> 4          Chickenpox (Varicella)  218  318  263  234  249  292 #> 5 Chlamydia trachomatis infection    0    0    0    0    0    0 #> 6                         Cholera    0    0    0    0    0    0 epitrax <- create_epitrax_from_file(data_file) |>   epitrax_set_config_from_file(config_file) |>   epitrax_set_report_diseases(disease_lists) |>   epitrax_ireport_annual_counts() |>   epitrax_ireport_monthly_avgs() |>   epitrax_ireport_ytd_counts_for_month()  list(epitrax$internal_reports) #> [[1]] #> [[1]]$annual_counts #>                                 disease 2019 2020 2021 2022 2023 2024 #> 1                               Anthrax    0    0    0    0    0    0 #> 2                   Botulism, foodborne    0    0    0    0    0    0 #> 3                    Campylobacteriosis    0    0    0    0    0    0 #> 4                Chickenpox (Varicella)  218  318  263  234  249  292 #> 5       Chlamydia trachomatis infection    0    0    0    0    0    0 #> 6                               Cholera    0    0    0    0    0    0 #> 7                   Colorado Tick Fever    0    0    0    0    0    0 #> 8        Coronavirus, Novel (2019-nCoV) 1014 1627 2398 1855  908 1191 #> 9        E. coli - Carbapenem resistant    0    0    0    0    0    0 #> 10                 HIV Infection, adult    0    0    0    0    0    0 #> 11 Influenza-associated hospitalization  625 1733 1889 2289 1664 1466 #> 12                         Lyme disease    0    0    0    0    0    0 #> 13                    Measles (rubeola)  211  326  292  414  586  304 #> 14                            Monkeypox    0    0    0    0    0    0 #> 15                            Pertussis    0    0    0    0    0    0 #> 16                        Salmonellosis    0    0    0    0    0    0 #> 17                    Syphilis, primary  278  356  439  398  577  269 #> 18                  Syphilis, secondary    0    0    0    0    0    0 #> 19                 Tuberculosis, Active    0    0    0    0    0    0 #> 20              West Nile virus disease    0    0    0    0    0    0 #> 21                         Yellow Fever    0    0    0    0    0    0 #>  #> [[1]]$`monthly_avgs_2019-2024` #>                                 disease    Jan    Feb    Mar    Apr    May #> 1                               Anthrax   0.00   0.00   0.00   0.00   0.00 #> 2                   Botulism, foodborne   0.00   0.00   0.00   0.00   0.00 #> 3                    Campylobacteriosis   0.00   0.00   0.00   0.00   0.00 #> 4                Chickenpox (Varicella)  23.50  22.33  21.00  26.67  19.83 #> 5       Chlamydia trachomatis infection   0.00   0.00   0.00   0.00   0.00 #> 6                               Cholera   0.00   0.00   0.00   0.00   0.00 #> 7                   Colorado Tick Fever   0.00   0.00   0.00   0.00   0.00 #> 8        Coronavirus, Novel (2019-nCoV) 114.17 137.67 115.67 140.33 113.50 #> 9        E. coli - Carbapenem resistant   0.00   0.00   0.00   0.00   0.00 #> 10                 HIV Infection, adult   0.00   0.00   0.00   0.00   0.00 #> 11 Influenza-associated hospitalization 121.83 140.17 129.33 162.67 133.67 #> 12                         Lyme disease   0.00   0.00   0.00   0.00   0.00 #> 13                    Measles (rubeola)  27.00  31.50  24.67  34.83  25.67 #> 14                            Monkeypox   0.00   0.00   0.00   0.00   0.00 #> 15                            Pertussis   0.00   0.00   0.00   0.00   0.00 #> 16                        Salmonellosis   0.00   0.00   0.00   0.00   0.00 #> 17                    Syphilis, primary  32.67  35.33  31.67  38.67  27.50 #> 18                  Syphilis, secondary   0.00   0.00   0.00   0.00   0.00 #> 19                 Tuberculosis, Active   0.00   0.00   0.00   0.00   0.00 #> 20              West Nile virus disease   0.00   0.00   0.00   0.00   0.00 #> 21                         Yellow Fever   0.00   0.00   0.00   0.00   0.00 #>       Jun    Jul    Aug    Sep    Oct    Nov    Dec #> 1    0.00   0.00   0.00   0.00   0.00   0.00   0.00 #> 2    0.00   0.00   0.00   0.00   0.00   0.00   0.00 #> 3    0.00   0.00   0.00   0.00   0.00   0.00   0.00 #> 4   19.17  24.17  20.00  18.83  25.33  19.00  22.50 #> 5    0.00   0.00   0.00   0.00   0.00   0.00   0.00 #> 6    0.00   0.00   0.00   0.00   0.00   0.00   0.00 #> 7    0.00   0.00   0.00   0.00   0.00   0.00   0.00 #> 8  114.50 139.17 110.17 122.17 146.67 123.17 121.67 #> 9    0.00   0.00   0.00   0.00   0.00   0.00   0.00 #> 10   0.00   0.00   0.00   0.00   0.00   0.00   0.00 #> 11 119.17 158.33 128.67 117.33 146.67 119.83 133.33 #> 12   0.00   0.00   0.00   0.00   0.00   0.00   0.00 #> 13  24.67  37.33  27.50  28.17  36.33  29.17  28.67 #> 14   0.00   0.00   0.00   0.00   0.00   0.00   0.00 #> 15   0.00   0.00   0.00   0.00   0.00   0.00   0.00 #> 16   0.00   0.00   0.00   0.00   0.00   0.00   0.00 #> 17  33.50  28.50  30.00  26.67  38.00  26.17  37.50 #> 18   0.00   0.00   0.00   0.00   0.00   0.00   0.00 #> 19   0.00   0.00   0.00   0.00   0.00   0.00   0.00 #> 20   0.00   0.00   0.00   0.00   0.00   0.00   0.00 #> 21   0.00   0.00   0.00   0.00   0.00   0.00   0.00 #>  #> [[1]]$ytd_counts #>                                 disease Current_YTD_Counts Avg_5yr_YTD_Counts #> 1                               Anthrax                  0                0.0 #> 2                   Botulism, foodborne                  0                0.0 #> 3                    Campylobacteriosis                  0                0.0 #> 4                Chickenpox (Varicella)                292              256.4 #> 5       Chlamydia trachomatis infection                  0                0.0 #> 6                               Cholera                  0                0.0 #> 7                   Colorado Tick Fever                  0                0.0 #> 8        Coronavirus, Novel (2019-nCoV)               1191             1560.4 #> 9        E. coli - Carbapenem resistant                  0                0.0 #> 10                 HIV Infection, adult                  0                0.0 #> 11 Influenza-associated hospitalization               1466             1640.0 #> 12                         Lyme disease                  0                0.0 #> 13                    Measles (rubeola)                304              365.8 #> 14                            Monkeypox                  0                0.0 #> 15                            Pertussis                  0                0.0 #> 16                        Salmonellosis                  0                0.0 #> 17                    Syphilis, primary                269              409.6 #> 18                  Syphilis, secondary                  0                0.0 #> 19                 Tuberculosis, Active                  0                0.0 #> 20              West Nile virus disease                  0                0.0 #> 21                         Yellow Fever                  0                0.0"},{"path":"https://epiforesite.github.io/epitraxr/articles/piped-mode.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Piped Mode","text":"package functions can called individually (standard mode, described briefly vignette(\"epitraxr\")), recommend using piped mode epitraxr package results much cleaner, maintainable code. Instead calling saving results generated report, use pipe operator |> chain together multiple reports reports saved single epitrax object. can either manipulate reports epitrax object, add pipe one epitraxr’s export functions write reports one supported formats (e.g., CSV). epitraxr package, functions expect “piped” input identified prefix epitrax_. Within family, report generators typically prefixed either epitrax_preport_ epitrax_ireport_ (corresponding public internal reports respectively), can also prefix epitrax_report (can public internal reports). Export functions prefixed epitrax_write_ (e.g., epitrax_write_csvs()). vignette walk step epitraxr pipe show completed pipe running end end.","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/articles/piped-mode.html","id":"create-an-epitrax-object","dir":"Articles","previous_headings":"Overview > Pipe Setup","what":"Create an epitrax object","title":"Piped Mode","text":"first step piped mode always create epitrax object create_epitrax_from_file() function. object contain data, configuration options, report settings needed reports pipe. epitrax object passed function pipe. report generated, appended appropriate list (public internal) epitrax object object passed next function pipe. create_epitrax_from_file() function reads data provided data file, validates, formats . adds data epitrax object epitrax$data. function also extracts key information summary statistics data adds epitrax object well: - epitrax$diseases: diseases found data - epitrax$yrs: Years included data - epitrax$report_year epitrax$report_month: year month treated “current” date reports. Default latest year/month data. - epitrax$internal_reports epitrax$public_reports: Lists hold generated reports. Initially empty. Note: functions pipe expect object class epitrax first argument. Thus, create_epitrax_from_file() start pipe.","code":"data_fp <- \"vignette-data/epitrax_data.csv\"  epitrax <- create_epitrax_from_file(filepath = data_fp)  names(epitrax) #> [1] \"data\"             \"diseases\"         \"yrs\"              \"report_year\"      #> [5] \"report_month\"     \"internal_reports\" \"public_reports\""},{"path":"https://epiforesite.github.io/epitraxr/articles/piped-mode.html","id":"add-disease-lists","dir":"Articles","previous_headings":"Overview > Pipe Setup","what":"Add Disease Lists","title":"Piped Mode","text":"next step adding two disease lists, one internal reports one public reports. given disease EpiTrax data, means reported cases disease years. still useful data may want include reports. epitraxr package uses two lists public reports typically include subset diseases, internal reports typically include tracked diseases. Add disease lists epitrax object using epitrax_set_report_diseases() function. epitrax object now contains report_diseases report_diseases$internal report_diseases$public holding individual lists.","code":"disease_lists = list(   internal = \"vignette-data/ireport_diseases.csv\",   public = \"vignette-data/preport_diseases.csv\" )  epitrax <- epitrax_set_report_diseases(epitrax, disease_list_files = disease_lists)  names(epitrax) #> [1] \"data\"             \"diseases\"         \"yrs\"              \"report_year\"      #> [5] \"report_month\"     \"internal_reports\" \"public_reports\"   \"report_diseases\""},{"path":"https://epiforesite.github.io/epitraxr/articles/piped-mode.html","id":"add-config","dir":"Articles","previous_headings":"Overview > Pipe Setup","what":"Add Config","title":"Piped Mode","text":"last step adding configuration options. can read list (epitrax_set_config_from_list()) file (epitrax_set_config_from_file()). Configuration options provide report generators important values, area’s current previous population (used converting counts rates per 100k) trend threshold (used determine current counts historical counts). epitrax object now contains config details:","code":"config_file <- \"vignette-data/config.yaml\" epitrax <- epitrax_set_config_from_file(epitrax, filepath = config_file)  names(epitrax) #> [1] \"data\"             \"diseases\"         \"yrs\"              \"report_year\"      #> [5] \"report_month\"     \"internal_reports\" \"public_reports\"   \"report_diseases\"  #> [9] \"config\" epitrax$config #> $current_population #> [1] 67000 #>  #> $avg_5yr_population #> [1] 65000 #>  #> $rounding_decimals #> [1] 2 #>  #> $generate_csvs #> [1] TRUE #>  #> $trend_threshold #> [1] 0.15"},{"path":"https://epiforesite.github.io/epitraxr/articles/piped-mode.html","id":"convenient-setup","dir":"Articles","previous_headings":"Overview > Pipe Setup","what":"Convenient Setup","title":"Piped Mode","text":"Since three operations must always occur report generators can run, epitraxr convenience function setup_epitrax().","code":"epitrax <- setup_epitrax(   filepath = data_fp,   config_file = config_file,   disease_list_files = disease_lists )  names(epitrax) #> [1] \"data\"             \"diseases\"         \"yrs\"              \"report_year\"      #> [5] \"report_month\"     \"internal_reports\" \"public_reports\"   \"report_diseases\"  #> [9] \"config\""},{"path":"https://epiforesite.github.io/epitraxr/articles/piped-mode.html","id":"running-report-generators","dir":"Articles","previous_headings":"Overview","what":"Running Report Generators","title":"Piped Mode","text":"point, epitrax object ready piped report generators. start, run epitrax_ireport_annual_counts() epitrax_ireport_monthly_counts_all_yrs(), inspect list reports: Call report generators: object now contains internal reports: public reports: can see, report generator simply appends created reports appropriate list.","code":"epitrax <- epitrax_ireport_annual_counts(epitrax) epitrax <- epitrax_ireport_monthly_counts_all_yrs(epitrax)  names(epitrax$internal_reports) #> [1] \"annual_counts\"       \"monthly_counts_2019\" \"monthly_counts_2020\" #> [4] \"monthly_counts_2021\" \"monthly_counts_2022\" \"monthly_counts_2023\" #> [7] \"monthly_counts_2024\" epitrax <- epitrax_ireport_monthly_avgs(epitrax) epitrax <- epitrax_ireport_ytd_counts_for_month(epitrax) epitrax <- epitrax_preport_month_crosssections(epitrax) epitrax <- epitrax_preport_ytd_rates(epitrax) names(epitrax$internal_reports) #> [1] \"annual_counts\"          \"monthly_counts_2019\"    \"monthly_counts_2020\"    #> [4] \"monthly_counts_2021\"    \"monthly_counts_2022\"    \"monthly_counts_2023\"    #> [7] \"monthly_counts_2024\"    \"monthly_avgs_2019-2024\" \"ytd_counts\" names(epitrax$public_reports) #> [1] \"public_report_Dec2024\" \"public_report_Nov2024\" \"public_report_Oct2024\" #> [4] \"public_report_Sep2024\" \"public_report_YTD\""},{"path":"https://epiforesite.github.io/epitraxr/articles/piped-mode.html","id":"exporting-reports","dir":"Articles","previous_headings":"Overview","what":"Exporting Reports","title":"Piped Mode","text":"may want process reports contained epitrax object R, often export generated reports one formats supported epitraxr.","code":""},{"path":"https://epiforesite.github.io/epitraxr/articles/piped-mode.html","id":"setup-filesystem","dir":"Articles","previous_headings":"Overview > Exporting Reports","what":"Setup Filesystem","title":"Piped Mode","text":"use export functions epitraxr, need provide folder paths internal public reports. organized list. setup_filesystem() function creates folders (don’t already exist) optionally clears old reports previous runs: can skip setup_filesystem() function, know folders created ready receive reports. pass fsys list epitraxr export functions.","code":"tmpdir <- tempdir() fsys <- list(   internal = file.path(tmpdir, \"internal_reports\"),   public = file.path(tmpdir, \"public_reports\") )  fsys <- setup_filesystem(folders = fsys, clear.reports = TRUE)"},{"path":"https://epiforesite.github.io/epitraxr/articles/piped-mode.html","id":"export-to-csv","dir":"Articles","previous_headings":"Overview > Exporting Reports","what":"Export to CSV","title":"Piped Mode","text":"common export format CSV using epitrax_write_csvs() function. Typically, export functions called end pipe. However, since export functions modify epitrax object, can safely insert functions anywhere pipe.","code":"epitrax <- epitrax_write_csvs(epitrax, fsys = fsys)  list.files(fsys$internal) #> [1] \"annual_counts.csv\"          \"monthly_avgs_2019-2024.csv\" #> [3] \"monthly_counts_2019.csv\"    \"monthly_counts_2020.csv\"    #> [5] \"monthly_counts_2021.csv\"    \"monthly_counts_2022.csv\"    #> [7] \"monthly_counts_2023.csv\"    \"monthly_counts_2024.csv\"    #> [9] \"ytd_counts.csv\" list.files(fsys$public) #> [1] \"public_report_Dec2024.csv\" \"public_report_Nov2024.csv\" #> [3] \"public_report_Oct2024.csv\" \"public_report_Sep2024.csv\" #> [5] \"public_report_YTD.csv\""},{"path":"https://epiforesite.github.io/epitraxr/articles/piped-mode.html","id":"full-pipe-putting-it-all-together","dir":"Articles","previous_headings":"Overview","what":"Full Pipe: Putting It All Together","title":"Piped Mode","text":"full pipe described :","code":"# Data and config files data_fp <- \"vignette-data/epitrax_data.csv\" disease_lists = list(   internal = \"vignette-data/ireport_diseases.csv\",   public = \"vignette-data/preport_diseases.csv\" ) config_file <- \"vignette-data/config.yaml\"  # Setup filesystem tmpdir <- tempdir() fsys <- list(   internal = file.path(tmpdir, \"internal_reports\"),   public = file.path(tmpdir, \"public_reports\") )  fsys <- setup_filesystem(folders = fsys, clear.reports = TRUE)  # Run report generation pipe epitrax <- setup_epitrax(     filepath = data_fp,     config_file = config_file,     disease_list_files = disease_lists   ) |>   epitrax_ireport_annual_counts() |>   epitrax_ireport_monthly_counts_all_yrs() |>   epitrax_ireport_monthly_avgs() |>   epitrax_ireport_ytd_counts_for_month() |>   epitrax_preport_month_crosssections() |>   epitrax_preport_ytd_rates() |>   epitrax_write_csvs(fsys = fsys)  length(epitrax$internal_reports) #> [1] 9 list.files(fsys$internal) #> [1] \"annual_counts.csv\"          \"monthly_avgs_2019-2024.csv\" #> [3] \"monthly_counts_2019.csv\"    \"monthly_counts_2020.csv\"    #> [5] \"monthly_counts_2021.csv\"    \"monthly_counts_2022.csv\"    #> [7] \"monthly_counts_2023.csv\"    \"monthly_counts_2024.csv\"    #> [9] \"ytd_counts.csv\"  length(epitrax$public_reports) #> [1] 5 list.files(fsys$public) #> [1] \"public_report_Dec2024.csv\" \"public_report_Nov2024.csv\" #> [3] \"public_report_Oct2024.csv\" \"public_report_Sep2024.csv\" #> [5] \"public_report_YTD.csv\""},{"path":"https://epiforesite.github.io/epitraxr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew Pulsipher. Author, maintainer. Nate Lanza. Author, contributor. Centers Disease Control Prevention's Center Forecasting Outbreak Analytics. Funder.           Cooperative agreement CDC-RFA-FT-23-0069","code":""},{"path":"https://epiforesite.github.io/epitraxr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pulsipher , Lanza N (2025). epitraxr: Manipulate Epitrax Data Generate Reports. R package version 0.5.0, https://epiforesite.github.io/epitraxr/.","code":"@Manual{,   title = {epitraxr: Manipulate Epitrax Data And Generate Reports},   author = {Andrew Pulsipher and Nate Lanza},   year = {2025},   note = {R package version 0.5.0},   url = {https://epiforesite.github.io/epitraxr/}, }"},{"path":"https://epiforesite.github.io/epitraxr/copilot-instructions.html","id":null,"dir":"","previous_headings":"","what":"epitraxr - R Package for EpiTrax Data and Report Generation","title":"epitraxr - R Package for EpiTrax Data and Report Generation","text":"Always reference instructions first fallback search bash commands encounter unexpected information match info .","code":""},{"path":"https://epiforesite.github.io/epitraxr/copilot-instructions.html","id":"working-effectively","dir":"","previous_headings":"","what":"Working Effectively","title":"epitraxr - R Package for EpiTrax Data and Report Generation","text":"Bootstrap setup development environment: - Install R system dependencies: bash   sudo apt update && sudo apt install -y r-base r-base-dev build-essential libcurl4-openssl-dev libssl-dev libxml2-dev pandoc - Install required R package dependencies via apt (avoids network issues): bash   sudo apt install -y r-cran-devtools r-cran-lubridate r-cran-yaml r-cran-tinytest Build install package: - Build install locally: sudo R CMD INSTALL . – takes 2 seconds. Set timeout 10 seconds. - package installs successfully includes sample data inst/sample_data/sample_epitrax_data.csv Run tests: - Test using tinytest framework: R -e \"library(epitraxr); tinytest::test_package('epitraxr')\" ---restore – takes 0.5 seconds. Set timeout 10 seconds. - tests must pass PR approved. tests fail, must fixed first. - Tests located inst/tinytest/ cover data validation, report generation, filesystem operations. - test specific functionality, can run individual test files: R -e \"library(epitraxr); tinytest::run_test_file('inst/tinytest/test_filename.R')\" ---restore","code":""},{"path":"https://epiforesite.github.io/epitraxr/copilot-instructions.html","id":"key-development-operations","dir":"","previous_headings":"","what":"Key Development Operations","title":"epitraxr - R Package for EpiTrax Data and Report Generation","text":"R CMD check (comprehensive validation): - R CMD check ---manual . - package pass R CMD check Pre-commit hooks: - Install: pip install pre-commit && pre-commit install - Run: pre-commit run ---files – May encounter network connectivity issues R environment bootstrap. critical basic development. - project uses .pre-commit-config.yaml hooks trailing whitespace, YAML validation, R-specific checks.","code":""},{"path":"https://epiforesite.github.io/epitraxr/copilot-instructions.html","id":"repository-structure","dir":"","previous_headings":"","what":"Repository Structure","title":"epitraxr - R Package for EpiTrax Data and Report Generation","text":"Core directories: - R/ - Main package code (data.R, epitrax.R, filesystem.R, helpers.R, reports.R, validation.R) - inst/ - Package installation files including sample data test files - inst/sample_data/ - Sample EpiTrax CSV data testing examples - inst/tinytest/ - Test suite using tinytest framework - scripts/ - Utility example scripts showing package usage - man/ - Generated documentation files. Since automatically generated, never manually change anything directory. Running R command devtools::check() build . - tests/tinytest.R - Entry point running tests Key files: - DESCRIPTION - Package metadata dependencies - README.Rmd - Source README.md (edit , README.md directly) - .pre-commit-config.yaml - Pre-commit hook configuration","code":""},{"path":"https://epiforesite.github.io/epitraxr/copilot-instructions.html","id":"testing-strategy","dir":"","previous_headings":"","what":"Testing Strategy","title":"epitraxr - R Package for EpiTrax Data and Report Generation","text":"Primary testing approach: - Use comprehensive tinytest test suite: R -e \"library(epitraxr); tinytest::test_package('epitraxr')\" ---restore - targeted testing changes specific files, run individual test files: R -e \"tinytest::run_test_file('inst/tinytest/test_[component].R')\" ---restore - tests must pass submitting PR","code":""},{"path":"https://epiforesite.github.io/epitraxr/copilot-instructions.html","id":"common-development-tasks","dir":"","previous_headings":"","what":"Common Development Tasks","title":"epitraxr - R Package for EpiTrax Data and Report Generation","text":"adding new functions: - Every new function must accompanying roxygen block proper documentation - Every new function must corresponding unit tests appropriate test file inst/tinytest/ - Follow existing patterns documentation testing modifying data processing functions: - Run tests specific component: R -e \"library(epitraxr); tinytest::run_test_file('inst/tinytest/test_data.R')\" ---restore - Ensure existing tests continue pass modifying report generation: - Run tests report functionality: R -e \"library(epitraxr); tinytest::run_test_file('inst/tinytest/test_reports.R')\" ---restore - Verify report generation tests pass modifying file system functions: - Run tests filesystem functionality: R -e \"library(epitraxr); tinytest::run_test_file('inst/tinytest/test_filesystem.R')\" ---restore - Test directory creation cleanup functionality","code":""},{"path":"https://epiforesite.github.io/epitraxr/copilot-instructions.html","id":"github-workflows","dir":"","previous_headings":"","what":"GitHub Workflows","title":"epitraxr - R Package for EpiTrax Data and Report Generation","text":"project includes: - .github/workflows/r-check.yaml - R CMD check across multiple platforms R versions - .github/workflows/build--cran.yaml - CRAN-ready package building - .github/workflows/pkgdown.yaml - Documentation site generation Important timing notes: - local development operations complete 10 seconds - Package installation: 2 seconds - Full test suite: 0.5 seconds - Individual test files: < 0.2 seconds - NEVER CANCEL operations - fast reliable","code":""},{"path":"https://epiforesite.github.io/epitraxr/copilot-instructions.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"epitraxr - R Package for EpiTrax Data and Report Generation","text":"System dependencies (installed via apt): - r-base, r-base-dev, build-essential - libcurl4-openssl-dev, libssl-dev, libxml2-dev, pandoc R package dependencies (DESCRIPTION): - lubridate, stats, utils, writexl, yaml (Imports) - readxl, tinytest, rmarkdown (Suggests) dependencies available via apt packages avoid network issues development.","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Manipulate Epitrax Data And Generate Reports","text":"EpiTrax central repository epidemiological data developed Utah State’s Department Health Human Services (DHHS). now used several states. EpiTrax, public health officials access many different types disease surveillance data, use produce regular (e.g., weekly, monthly, annual) reports respective jurisdictions. can tedious, time-intensive process, often involving multiple spreadsheets. epitraxr package makes fast easy process EpiTrax data generate reports. epitraxr simple setup report pipeline, simply hit “run” select latest EpiTrax export—epitraxr rest!","code":""},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Manipulate Epitrax Data And Generate Reports","text":"can install development version epitraxr GitHub : local health departments, recommend going steps Installation Local Health Departments (). experience LHD-managed machines need additional tools packages installed first. list walk steps.","code":"# install.packages(\"devtools\") devtools::install_github(\"EpiForeSITE/epitraxr\")"},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"installing-package-dependencies","dir":"","previous_headings":"Installation","what":"Installing Package Dependencies","title":"Manipulate Epitrax Data And Generate Reports","text":"Many features epitraxr work standard installation. However, several optional features, PDF report generation R Shiny app, require install additional dependencies. can command: PDF reports, may need install LaTeX distribution well. recommend using TinyTeX described R Markdown Cookbook. First, install tinytex package: , install TinyTeX (LaTeX distribution) using tinytex package: , can use epitraxr generate PDF reports.","code":"# install.packages(\"devtools\") devtools::install_github(\"EpiForeSITE/epitraxr\", dependencies = TRUE) install.packages(\"tinytex\") tinytex::install_tinytex() # to uninstall TinyTeX, run # tinytex::uninstall_tinytex()"},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"installation-for-local-health-departments","dir":"","previous_headings":"Installation","what":"Installation For Local Health Departments","title":"Manipulate Epitrax Data And Generate Reports","text":"experience, machines managed local health departments (LHDs) less likely installed necessary packages tools. users, recommend completing following steps installing package using instructions . Install latest version R: https://cran.rstudio.com Install RStudio: https://posit.co/download/rstudio-desktop/ Windows, install version Rtools corresponding version R installed. needed build install certain types packages. Install devtools (needed install package GitHub) Install tinytex package Install TinyTeX (LaTeX distribution) using tinytex package Install epitraxr Note: previously attempted install epitraxr ran error (one solved steps), need install package option force = TRUE. ensures full package downloaded installed properly. command also update package (e.g., want get latest version GitHub.).","code":"install.packages(\"devtools\") install.packages(\"tinytex\") tinytex::install_tinytex() devtools::install_github(\"EpiForeSITE/epitraxr\", dependencies = TRUE, force = TRUE)"},{"path":[]},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"input-data","dir":"","previous_headings":"Usage > Inputs","what":"Input Data","title":"Manipulate Epitrax Data And Generate Reports","text":"epitraxr expects input data CSV format (Excel) contains EpiTrax data exported following columns: patient_mmwr_week (integer) patient_mmwr_year (integer) patient_disease (character) example: dataset can include columns, epitraxr ignore . Also, rows missing NA values input dataset ignored warning printed Console. warning intended inform user input missing/NA values, case user wants correct (re-run report generation). mean program unable generate reports rest data.","code":"\"patient_mmwr_week\",\"patient_mmwr_year\",\"patient_disease\" \"26\",\"2020\",\"Chlamydia trachomatis infection\""},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"report-settings","dir":"","previous_headings":"Usage > Inputs","what":"Report Settings","title":"Manipulate Epitrax Data And Generate Reports","text":"configure reports, epitraxr accepts three OPTIONAL files: file named internal_report_diseases.csv example scripts. EpiTrax_name: list diseases include report NAMED EPITRAX. column required. Group_name: Containing disease group (e.g., “Zoonotic Disease”) disease EpiTrax_name column. column optional used grouped disease report functions (create_report_grouped_stats() epitrax_report_grouped_stats()). omitted, epitraxr functions operate normally, grouped disease report functions set diseases single group “Uncategorized”. Internal Disease List provided, epitraxr default using whatever diseases found input dataset. file named public_report_diseases.csv example scripts. EpiTrax_name: list diseases include report NAMED EPITRAX. NOTE: multiple diseases Public_name report entries combined. example, combine “Syphilis, primary” “Syphilis, secondary” “Syphilis”, simply set Public_name diseases “Syphilis”. Public Disease List provided, program default using whatever diseases found input dataset. current_population: Population converting case counts current year Rates per 100k. Defaults 100k. avg_5yr_population: Population use converting case counts 5yr historical average Rates per 100k. Defaults current_population. rounding_decimals: many digits round decimal values. Defaults 2. generate_csvs: Whether generate CSVs. false, Excel files generated. Defaults TRUE. trend_threshold: Threshold determining “Trend” column reports compute statistic. percent change trend_threshold result change trend. Defaults 0.15 (15%). Report Config file named report_config.yaml example scripts. , files optional, significantly improve quality reports. Note: Disease lists (internal public) might include diseases case data input dataset. case, values simply 0s generated reports.","code":""},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"filesystem","dir":"","previous_headings":"Usage > Inputs","what":"Filesystem","title":"Manipulate Epitrax Data And Generate Reports","text":"epitraxr can output reports CSVs, Excel files, PDFs. write reports outputs, need provide output functions folders epitraxr write outputs. Generally, ’ll use three folders: report_settings/: Holds settings files report generation. internal_reports/: Holds reports intended internal use health department. public_reports/: Holds reports intended public use. can create manually can use setup_filesystem() function create directories. example scripts scripts/ folder start setting filesystem. WARNING: place files internal_reports public_reports folders give epitraxr typically EVERYTHING folders DELETED time script runs (depending configure setup_filesystem()). intended remove reports previous runs don’t clutter filesystem. want save old reports, move internal_reports/public_reports folders running epitraxr script .","code":""},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"executing-epitraxr-code","dir":"","previous_headings":"Usage","what":"Executing epitraxr Code","title":"Manipulate Epitrax Data And Generate Reports","text":"epitraxr can used either “standard” mode “piped” mode (recommended).","code":""},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"standard-mode","dir":"","previous_headings":"Usage > Executing epitraxr Code","what":"Standard Mode","title":"Manipulate Epitrax Data And Generate Reports","text":"","code":"library(epitraxr)  data_file <- system.file(   \"sample_data/sample_epitrax_data.csv\",   package = \"epitraxr\" ) epitrax_data <- read_epitrax_data(data_file)  report <- create_report_annual_counts(   data = epitrax_data,   diseases = c(\"Chickenpox\", \"Measles\", \"Lyme disease\") )  report #>        disease 2019 2020 2021 2022 2023 2024 #> 1   Chickenpox  218  318  263  234  249  292 #> 2 Lyme disease    0    0    0    0    0    0 #> 3      Measles  211  326  292  414  586  304"},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"piped-mode-recommended","dir":"","previous_headings":"Usage > Executing epitraxr Code","what":"Piped Mode (recommended)","title":"Manipulate Epitrax Data And Generate Reports","text":"Piped mode makes super simple add additional reports.","code":"library(epitraxr)  config_file <- system.file(   \"sample_data/sample_config.yml\",   package = \"epitraxr\" )  disease_list_file <- system.file(   \"sample_data/sample_disease_list.csv\",   package = \"epitraxr\" )  epitrax <- create_epitrax_from_file(data_file) |>   epitrax_set_config_from_file(config_file) |>   epitrax_set_report_diseases(list(     internal = disease_list_file,     public = disease_list_file   )) |>   epitrax_ireport_annual_counts()  epitrax$internal_reports$annual_counts #>        disease 2019 2020 2021 2022 2023 2024 #> 1   Chickenpox  218  318  263  234  249  292 #> 2 Lyme disease    0    0    0    0    0    0 #> 3      Measles  211  326  292  414  586  304 epitrax <- create_epitrax_from_file(data_file) |>   epitrax_set_config_from_file(config_file) |>   epitrax_set_report_diseases(list(     internal = disease_list_file,     public = disease_list_file   )) |>   epitrax_ireport_annual_counts() |>   epitrax_ireport_monthly_avgs() |>   epitrax_ireport_ytd_counts_for_month()  list(epitrax$internal_reports) #> [[1]] #> [[1]]$annual_counts #>        disease 2019 2020 2021 2022 2023 2024 #> 1   Chickenpox  218  318  263  234  249  292 #> 2 Lyme disease    0    0    0    0    0    0 #> 3      Measles  211  326  292  414  586  304 #>  #> [[1]]$`monthly_avgs_2019-2024` #>        disease  Jan    Feb    Mar    Apr    May    Jun    Jul  Aug    Sep #> 1   Chickenpox 23.5 22.333 21.000 26.667 19.833 19.167 24.167 20.0 18.833 #> 2 Lyme disease  0.0  0.000  0.000  0.000  0.000  0.000  0.000  0.0  0.000 #> 3      Measles 27.0 31.500 24.667 34.833 25.667 24.667 37.333 27.5 28.167 #>      Oct    Nov    Dec #> 1 25.333 19.000 22.500 #> 2  0.000  0.000  0.000 #> 3 36.333 29.167 28.667 #>  #> [[1]]$ytd_counts #>        disease Current_YTD_Counts Avg_5yr_YTD_Counts #> 1   Chickenpox                292              256.4 #> 2 Lyme disease                  0                0.0 #> 3      Measles                304              365.8"},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"shiny-app","dir":"","previous_headings":"Usage","what":"Shiny App","title":"Manipulate Epitrax Data And Generate Reports","text":"epitraxr package includes Shiny app, provides user-friendly interface running report generation operations epitraxr. run Shiny app, ’ll need install optional dependencies, shiny DT (didn’t already initial package installation). Next, load package: Finally, use run_app() launch app:","code":"devtools::install_github(\"EpiForeSITE/epitraxr\", dependencies = TRUE) library(epitraxr) run_app()"},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"scripts","dir":"","previous_headings":"Usage","what":"Scripts","title":"Manipulate Epitrax Data And Generate Reports","text":"’ve developed couple handy scripts included GitHub repo scripts/ folder: epitraxr-piped.R: Showcases report generation using epitraxr’s Piped Mode (recommended) epitraxr-standard.R: Showcases report generation using epitraxr’s Standard Mode scripts provide full report generation process run successfully package installed additional dependencies (see ). provide identical output original project (currently inactive), though epitraxr-piped.R additionally provides new reports generates PDFs.","code":""},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"troubleshooting-common-usage-problems","dir":"","previous_headings":"Usage","what":"Troubleshooting: Common Usage Problems","title":"Manipulate Epitrax Data And Generate Reports","text":"epitraxr unexpectedly fails generate reports previously succeeding, check none generated reports open machine. Often, epitraxr script start deleting existing reports folders generating new ones. files opened, epitraxr delete . Close open files try running script .","code":""},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting Help","title":"Manipulate Epitrax Data And Generate Reports","text":"encounter clear bug, please file issue minimal reproducible example GitHub.","code":""},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Manipulate Epitrax Data And Generate Reports","text":"Please note epitraxr project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://epiforesite.github.io/epitraxr/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Manipulate Epitrax Data And Generate Reports","text":"project made possible cooperative agreement CDC-RFA-FT-23-0069 CDC’s Center Forecasting Outbreak Analytics. contents solely responsibility authors necessarily represent official views Centers Disease Control Prevention.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/clear_old_reports.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear out old reports before generating new ones. — clear_old_reports","title":"Clear out old reports before generating new ones. — clear_old_reports","text":"clear_old_reports deletes reports previous runs returns list reports deleted.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/clear_old_reports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear out old reports before generating new ones. — clear_old_reports","text":"","code":"clear_old_reports(internal, public)"},{"path":"https://epiforesite.github.io/epitraxr/reference/clear_old_reports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear out old reports before generating new ones. — clear_old_reports","text":"internal Filepath. Folder internal reports. public Filepath. Folder public reports.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/clear_old_reports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear out old reports before generating new ones. — clear_old_reports","text":"list old reports cleared.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/clear_old_reports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear out old reports before generating new ones. — clear_old_reports","text":"","code":"ireports_folder <- file.path(tempdir(), \"internal\") preports_folder <- file.path(tempdir(), \"public\") dir.create(ireports_folder) dir.create(preports_folder)  clear_old_reports(ireports_folder, preports_folder) #> [[1]] #> character(0) #>  #> [[2]] #> character(0) #>  unlink(c(ireports_folder, preports_folder), recursive = TRUE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/compute_trend.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the report trend — compute_trend","title":"Compute the report trend — compute_trend","text":"'compute_trend' compares values two columns produces new column containing trend result. trend represented one three values: \"Elevated\": increase baseline \"Less Expected\": decrease baseline \"Expected\": change baseline","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/compute_trend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the report trend — compute_trend","text":"","code":"compute_trend(current, historical, threshold = 0)"},{"path":"https://epiforesite.github.io/epitraxr/reference/compute_trend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the report trend — compute_trend","text":"current List. Current data. historical List. Historical comparison data. threshold Numeric. Percentage threshold (decimal) determining trend significance. Values within percentage historical value considered \"Expected\". Defaults 0.0 (difference triggers trend).","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/compute_trend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the report trend — compute_trend","text":"Character vector containing trend labels.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/compute_trend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the report trend — compute_trend","text":"","code":"# Without threshold - any difference triggers trend compute_trend(c(5, 10, 10), c(3, 10, 11)) #> [1] \"Elevated\"           \"Expected\"           \"Less Than Expected\"  # With 15% threshold - small changes are \"Expected\" compute_trend(c(5, 10, 10), c(3, 10, 11), threshold = 0.15) #> [1] \"Elevated\" \"Expected\" \"Expected\""},{"path":"https://epiforesite.github.io/epitraxr/reference/convert_counts_to_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert case counts to rate — convert_counts_to_rate","title":"Convert case counts to rate — convert_counts_to_rate","text":"'convert_counts_to_rate' converts case counts given population adjusted per population size X rounds given number digits.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/convert_counts_to_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert case counts to rate — convert_counts_to_rate","text":"","code":"convert_counts_to_rate(counts, pop, digits, rate_adj_pop = 1e+05)"},{"path":"https://epiforesite.github.io/epitraxr/reference/convert_counts_to_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert case counts to rate — convert_counts_to_rate","text":"counts Integer(s). Case counts convert. pop Integer. Population size cases counted. digits Integer. Number decimals round . rate_adj_pop Integer. Optional target population use rate. Defaults 100k rate per 100k.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/convert_counts_to_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert case counts to rate — convert_counts_to_rate","text":"count(s) rates per rate_adj_pop.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/convert_counts_to_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert case counts to rate — convert_counts_to_rate","text":"","code":"convert_counts_to_rate(50, 200000, 2) #> [1] 25 convert_counts_to_rate(c(10, 20), 100000, 1, 10000) #> [1] 1 2"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_epitrax_from_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an EpiTrax object from data file — create_epitrax_from_file","title":"Create an EpiTrax object from data file — create_epitrax_from_file","text":"create_epitrax_from_file reads EpiTrax data file creates structured object containing data along commonly used metadata empty report lists.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_epitrax_from_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an EpiTrax object from data file — create_epitrax_from_file","text":"","code":"create_epitrax_from_file(filepath = NULL, num_yrs = 5)"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_epitrax_from_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an EpiTrax object from data file — create_epitrax_from_file","text":"filepath Optional filepath. EpiTrax data file CSV. parameter NULL, user prompted choose file interactively. num_yrs Integer. Number years data keep. Defaults 5.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_epitrax_from_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an EpiTrax object from data file — create_epitrax_from_file","text":"object class epitrax containing: data: validated formatted EpiTrax data diseases: Vector unique diseases dataset yrs: Vector years dataset report_year: recent year dataset report_month: recent month report_year internal_reports: Empty list store internal reports public_reports: Empty list store public reports","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/reference/create_epitrax_from_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an EpiTrax object from data file — create_epitrax_from_file","text":"","code":"if (FALSE) { # \\dontrun{ # Interactive file chooser: create_epitrax_from_file() } # }  # Using sample data included with package data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") epitrax <- create_epitrax_from_file(data_file)  # Access components head(epitrax$data) #>     disease month year counts #> 1 Influenza     8 2020      1 #> 2 Influenza    12 2019      1 #> 3 Influenza     7 2021      1 #> 4  COVID-19     7 2024      1 #> 5 Influenza     6 2020      1 #> 6 Influenza     4 2022      1 epitrax$diseases #> [1] \"Influenza\"  \"COVID-19\"   \"Measles\"    \"Chickenpox\" \"Syphilis\"   epitrax$report_year #> [1] 2024"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_filesystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Create filesystem — create_filesystem","title":"Create filesystem — create_filesystem","text":"create_filesystem creates given folders already exist.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_filesystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create filesystem — create_filesystem","text":"","code":"create_filesystem(internal, public, settings)"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_filesystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create filesystem — create_filesystem","text":"internal Filepath. Folder internal reports. public Filepath. Folder public reports. settings Filepath. Folder report settings.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_filesystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create filesystem — create_filesystem","text":"NULL.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_filesystem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create filesystem — create_filesystem","text":"","code":"internal_folder = file.path(tempdir(), \"internal\")  public_folder = file.path(tempdir(), \"public\")  settings_folder = file.path(tempdir(), \"settings\")   create_filesystem(    internal = internal_folder,    public = public_folder,    settings = settings_folder  )  unlink(c(internal_folder, public_folder, settings_folder), recursive = TRUE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_combined_month_ytd.html","id":null,"dir":"Reference","previous_headings":"","what":"Create combined monthly and year-to-date public report — create_public_report_combined_month_ytd","title":"Create combined monthly and year-to-date public report — create_public_report_combined_month_ytd","text":"'create_public_report_combined_month_ytd' creates comprehensive public report combines monthly case data year--date statistics given month year. provides current month context cumulative year progress.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_combined_month_ytd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create combined monthly and year-to-date public report — create_public_report_combined_month_ytd","text":"","code":"create_public_report_combined_month_ytd(data, diseases, y, m, config)"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_combined_month_ytd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create combined monthly and year-to-date public report — create_public_report_combined_month_ytd","text":"data Dataframe. Input data columns: disease (character) year (integer) month (integer) counts (integer) diseases Dataframe. Diseases include report. Maps EpiTrax disease names public-facing versions. Must columns: EpiTrax_name (character) Public_name (character) y Integer. Report year m Integer. Report month (1-12) config List. Report settings","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_combined_month_ytd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create combined monthly and year-to-date public report — create_public_report_combined_month_ytd","text":"List containing report name combined monthly/YTD report data columns monthly cases/averages/trends YTD statistics.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_combined_month_ytd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create combined monthly and year-to-date public report — create_public_report_combined_month_ytd","text":"Uses following config options: current_population avg_5yr_population rounding_decimals trend_threshold","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_combined_month_ytd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create combined monthly and year-to-date public report — create_public_report_combined_month_ytd","text":"","code":"data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") # Read in EpiTrax data data <- read_epitrax_data(data_file)  diseases <- data.frame(   EpiTrax_name = c(\"Influenza\", \"COVID-19\", \"Measles\", \"Syphilis\"),   Public_name = c(\"Influenza\", \"COVID-19\", \"Measles\", \"Syphilis\") ) config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                           package = \"epitraxr\") config <- get_report_config(config_file) create_public_report_combined_month_ytd(  data = data,  diseases = diseases,  y = 2024,  m = 2,  config = config ) #> $name #> [1] \"public_report_combined_Feb2024\" #>  #> $report #>     Disease Feb Cases Feb Average Cases              Trend YTD Cases #> 1  COVID-19        89             145.4 Less Than Expected      1191 #> 2 Influenza       115             149.0 Less Than Expected      1466 #> 3   Measles        16              33.6 Less Than Expected       304 #> 4  Syphilis        18              38.0 Less Than Expected       269 #>   YTD Average Cases YTD Rate per 100k YTD Average Rate per 100k #> 1             239.2          2126.786                   419.649 #> 2             260.4          2617.857                   456.842 #> 3              55.6           542.857                    97.544 #> 4              64.2           480.357                   112.632 #>"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_month.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a monthly cross-section public report — create_public_report_month","title":"Create a monthly cross-section public report — create_public_report_month","text":"'create_public_report_month' creates public report given month.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a monthly cross-section public report — create_public_report_month","text":"","code":"create_public_report_month(data, diseases, y, m, config)"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a monthly cross-section public report — create_public_report_month","text":"data Dataframe. Input data columns: disease (character) year (integer) month (integer) counts (integer) diseases Dataframe. Diseases include report. Maps EpiTrax disease names public-facing versions. Must columns: EpiTrax_name (character) Public_name (character) y Integer. Report year m Integer. Report month (1-12) config List. Report settings","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a monthly cross-section public report — create_public_report_month","text":"List containing report name data.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_month.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a monthly cross-section public report — create_public_report_month","text":"Uses following config options: current_population avg_5yr_population rounding_decimals trend_threshold","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_month.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a monthly cross-section public report — create_public_report_month","text":"","code":"data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") # Read in EpiTrax data data <- read_epitrax_data(data_file)  diseases <- data.frame(   EpiTrax_name = c(\"Influenza\", \"COVID-19\", \"Measles\", \"Syphilis\"),   Public_name = c(\"Influenza\", \"COVID-19\", \"Measles\", \"Syphilis\") ) config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                           package = \"epitraxr\") config <- get_report_config(config_file)  create_public_report_month(  data = data,  diseases = diseases,  y = 2024,  m = 1,  config = config ) #> $name #> [1] \"public_report_Jan2024\" #>  #> $report #>     Disease Rate_per_100k Avg_5yr_Rate              Trend #> 1  COVID-19       144.643      211.930 Less Than Expected #> 2 Influenza       207.143      215.789           Expected #> 3   Measles        39.286       49.123 Less Than Expected #> 4  Syphilis        39.286       61.053 Less Than Expected #>"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_ytd.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a YTD public report — create_public_report_ytd","title":"Create a YTD public report — create_public_report_ytd","text":"'create_public_report_ytd' creates public report YTD rates.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_ytd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a YTD public report — create_public_report_ytd","text":"","code":"create_public_report_ytd(data, diseases, y, m, config)"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_ytd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a YTD public report — create_public_report_ytd","text":"data Dataframe. Input data columns: disease (character) year (integer) month (integer) counts (integer) diseases Dataframe. Diseases include report. Maps EpiTrax disease names public-facing versions. Must columns: EpiTrax_name (character) Public_name (character) y Integer. Report year m Integer. Report month (1-12) config List. Report settings","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_ytd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a YTD public report — create_public_report_ytd","text":"List containing report name data.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_ytd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a YTD public report — create_public_report_ytd","text":"Uses following config options: current_population avg_5yr_population rounding_decimals trend_threshold","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/reference/create_public_report_ytd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a YTD public report — create_public_report_ytd","text":"","code":"data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") # Read in EpiTrax data data <- read_epitrax_data(data_file)  diseases <- data.frame(   EpiTrax_name = c(\"Influenza\", \"COVID-19\", \"Measles\", \"Syphilis\"),   Public_name = c(\"Influenza\", \"COVID-19\", \"Measles\", \"Syphilis\") ) config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                           package = \"epitraxr\") config <- get_report_config(config_file) create_public_report_ytd(  data = data,  diseases = diseases,  y = 2024,  m = 1,  config = config ) #> $name #> [1] \"public_report_YTD\" #>  #> $report #>     Disease YTD_Rate_per_100k Avg_5yr_Rate    Trend #> 1  COVID-19          2126.786      211.930 Elevated #> 2 Influenza          2617.857      215.789 Elevated #> 3   Measles           542.857       49.123 Elevated #> 4  Syphilis           480.357       61.053 Elevated #>"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_annual_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create annual counts report — create_report_annual_counts","title":"Create annual counts report — create_report_annual_counts","text":"'create_report_annual_counts' generates data frame annual case counts disease, years columns.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_annual_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create annual counts report — create_report_annual_counts","text":"","code":"create_report_annual_counts(data, diseases)"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_annual_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create annual counts report — create_report_annual_counts","text":"data Dataframe. Input data columns: disease (character) year (integer) month (integer) counts (integer) diseases Character vector. Diseases include report","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_annual_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create annual counts report — create_report_annual_counts","text":"Dataframe annual counts one row per disease one column per year.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_annual_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create annual counts report — create_report_annual_counts","text":"","code":"data <- data.frame(   disease = c(\"A\", \"A\", \"B\"),   year = c(2020, 2021, 2020),   counts = c(5, 7, 8) ) create_report_annual_counts(data, diseases = c(\"A\", \"B\", \"C\")) #>   disease 2020 2021 #> 1       A    5    7 #> 2       B    8    0 #> 3       C    0    0"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_grouped_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Create grouped disease statistics report — create_report_grouped_stats","title":"Create grouped disease statistics report — create_report_grouped_stats","text":"'create_report_grouped_stats' generates comprehensive report current historical statistics diseases organized group. report includes monthly counts/rates, year--date counts, trend analysis.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_grouped_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create grouped disease statistics report — create_report_grouped_stats","text":"","code":"create_report_grouped_stats(data, diseases, y, m, config)"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_grouped_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create grouped disease statistics report — create_report_grouped_stats","text":"data Dataframe. Input data columns: disease (character) year (integer) month (integer) counts (integer) diseases Dataframe. Diseases include report. Must column EpiTrax_name (character) diseases include. Optionally may column Group_name (character) define disease groupings. Group_name missing, diseases grouped \"Uncategorized\". y Integer. Report year m Integer. Report month (1-12) config List. Report settings","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_grouped_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create grouped disease statistics report — create_report_grouped_stats","text":"Dataframe one row per disease containing: Group: Disease group name Disease: Disease name Monthly counts rates current year/month Historical monthly averages medians Year--date counts historical averages medians YTD trend indicators","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_grouped_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create grouped disease statistics report — create_report_grouped_stats","text":"Uses following config options: current_population avg_5yr_population rounding_decimals trend_threshold","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_grouped_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create grouped disease statistics report — create_report_grouped_stats","text":"","code":"data <- data.frame(   disease = c(\"A\", \"A\", \"B\", \"B\"),   year = c(2023, 2024, 2023, 2024),   month = c(1, 1, 2, 2),   counts = c(10, 20, 15, 25) ) diseases <- data.frame(   EpiTrax_name = c(\"A\", \"B\", \"C\"),   Group_name = c(\"Group1\", \"Group1\", \"Group2\") ) config <- list(   current_population = 100000,   avg_5yr_population = 100000,   rounding_decimals = 1,   trend_threshold = 0.15 ) create_report_grouped_stats(data, diseases, 2024, 2, config) #>    Group Disease February 2024 February 2024 Rate Historical February Avg #> 1 Group1       A             0                  0                       0 #> 2 Group1       B            25                 25                      15 #> 3 Group2       C             0                  0                       0 #>   Historical February Median 2024 YTD Historical 2024 YTD Avg #> 1                          0       20                      10 #> 2                         15       25                      15 #> 3                          0        0                       0 #>   Historical 2024 YTD Median YTD Trend #> 1                         10  Elevated #> 2                         15  Elevated #> 3                          0  Expected"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_avgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create monthly averages report — create_report_monthly_avgs","title":"Create monthly averages report — create_report_monthly_avgs","text":"'create_report_monthly_avgs' generates data frame average monthly case counts disease across years input data.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_avgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create monthly averages report — create_report_monthly_avgs","text":"","code":"create_report_monthly_avgs(data, diseases, config)"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_avgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create monthly averages report — create_report_monthly_avgs","text":"data Dataframe. Input data columns: disease (character) year (integer) month (integer) counts (integer) diseases Character vector. Diseases include report config List. Report settings","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_avgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create monthly averages report — create_report_monthly_avgs","text":"Dataframe monthly averages one row per disease one column per month (Jan Dec).","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_avgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create monthly averages report — create_report_monthly_avgs","text":"Uses following config options: rounding_decimals","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_avgs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create monthly averages report — create_report_monthly_avgs","text":"","code":"data <- data.frame(   disease = c(\"A\", \"A\", \"B\", \"B\"),   year = c(2023, 2024, 2023, 2024),   month = c(1, 1, 2, 2),   counts = c(10, 20, 15, 25) ) config <- list(rounding_decimals = 1) create_report_monthly_avgs(data, c(\"A\", \"B\", \"C\"), config) #>   disease Jan Feb #> 1       A  15   0 #> 2       B   0  20 #> 3       C   0   0"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create monthly counts report — create_report_monthly_counts","title":"Create monthly counts report — create_report_monthly_counts","text":"'create_report_monthly_counts' generates data frame monthly case counts disease specific year, months columns.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create monthly counts report — create_report_monthly_counts","text":"","code":"create_report_monthly_counts(data, diseases, y)"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create monthly counts report — create_report_monthly_counts","text":"data Dataframe. Input data columns: disease (character) year (integer) month (integer) counts (integer) diseases Character vector. Diseases include report y Integer. Report year","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create monthly counts report — create_report_monthly_counts","text":"Dataframe monthly counts one row per disease one column per month (Jan Dec).","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create monthly counts report — create_report_monthly_counts","text":"","code":"data <- data.frame(   disease = c(\"A\", \"A\", \"B\", \"B\"),   year = c(2024, 2024, 2024, 2023),   month = c(1, 2, 1, 4),   counts = c(5, 7, 8, 9) ) create_report_monthly_counts(data, diseases = c(\"A\", \"B\", \"C\"), y = 2024) #>   disease Jan Feb #> 1       A   5   7 #> 2       B   8   0 #> 3       C   0   0"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_medians.html","id":null,"dir":"Reference","previous_headings":"","what":"Create monthly medians report — create_report_monthly_medians","title":"Create monthly medians report — create_report_monthly_medians","text":"'create_report_monthly_medians' generates data frame median monthly case counts disease across years input data. provides robust central tendency measure compared averages skewed data.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_medians.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create monthly medians report — create_report_monthly_medians","text":"","code":"create_report_monthly_medians(data, diseases)"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_medians.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create monthly medians report — create_report_monthly_medians","text":"data Dataframe. Input data columns: disease (character) year (integer) month (integer) counts (integer) diseases Character vector. Diseases include report","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_medians.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create monthly medians report — create_report_monthly_medians","text":"Dataframe monthly medians one row per disease one column per month (Jan Dec).","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_monthly_medians.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create monthly medians report — create_report_monthly_medians","text":"","code":"data <- data.frame(   disease = c(\"A\", \"A\", \"A\", \"B\", \"B\", \"B\"),   year = c(2022, 2023, 2024, 2022, 2023, 2024),   month = c(1, 1, 1, 2, 2, 2),   counts = c(10, 20, 30, 5, 15, 25) ) create_report_monthly_medians(data, c(\"A\", \"B\", \"C\")) #>   disease Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec #> 1       A  20   0   0   0   0   0   0   0   0   0   0   0 #> 2       B   0  15   0   0   0   0   0   0   0   0   0   0 #> 3       C   0   0   0   0   0   0   0   0   0   0   0   0"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_ytd_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create year-to-date (YTD) counts report — create_report_ytd_counts","title":"Create year-to-date (YTD) counts report — create_report_ytd_counts","text":"'create_report_ytd_counts' generates data frame year--date counts disease given month, comparing given year average years.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_ytd_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create year-to-date (YTD) counts report — create_report_ytd_counts","text":"","code":"create_report_ytd_counts(data, diseases, y, m, config, as.rates = FALSE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_ytd_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create year-to-date (YTD) counts report — create_report_ytd_counts","text":"data Dataframe. Input data columns: disease (character) year (integer) month (integer) counts (integer) diseases Character vector. Diseases include report y Integer. Report year m Integer. Report month (1-12) config List. Report settings .rates Logical. TRUE, returns rates per 100k instead raw counts","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_ytd_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create year-to-date (YTD) counts report — create_report_ytd_counts","text":"Dataframe one row per disease columns current YTD average YTD values (either counts rates per 100k)","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_ytd_counts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create year-to-date (YTD) counts report — create_report_ytd_counts","text":"Uses following config options: current_population avg_5yr_population rounding_decimals","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_ytd_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create year-to-date (YTD) counts report — create_report_ytd_counts","text":"","code":"data <- data.frame(   disease = c(\"A\", \"A\", \"B\", \"B\"),   year = c(2024, 2023, 2024, 2023),   month = c(1, 1, 2, 2),   counts = c(10, 20, 15, 25) ) config <- list(   current_population = 100000,   avg_5yr_population = 100000,   rounding_decimals = 1 ) create_report_ytd_counts(data, c(\"A\", \"B\", \"C\"), 2024, 2, config) #>   disease Current_YTD_Counts Avg_5yr_YTD_Counts #> 1       A                 10                 20 #> 2       B                 15                 25 #> 3       C                  0                  0"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_ytd_medians.html","id":null,"dir":"Reference","previous_headings":"","what":"Create year-to-date (YTD) medians report — create_report_ytd_medians","title":"Create year-to-date (YTD) medians report — create_report_ytd_medians","text":"'create_report_ytd_medians' generates data frame median year--date counts disease given month (months 1:m) across years data. provides robust central tendency measure YTD values.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_ytd_medians.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create year-to-date (YTD) medians report — create_report_ytd_medians","text":"","code":"create_report_ytd_medians(data, diseases, m)"},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_ytd_medians.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create year-to-date (YTD) medians report — create_report_ytd_medians","text":"data Dataframe. Input data columns: disease (character) year (integer) month (integer) counts (integer) diseases Character vector. Diseases include report m Integer. Report month (1-12)","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_ytd_medians.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create year-to-date (YTD) medians report — create_report_ytd_medians","text":"Dataframe one row per disease columns disease name median YTD counts.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/create_report_ytd_medians.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create year-to-date (YTD) medians report — create_report_ytd_medians","text":"","code":"data <- data.frame(   disease = c(\"A\", \"A\", \"A\", \"B\", \"B\", \"B\"),   year = c(2022, 2023, 2024, 2022, 2023, 2024),   month = c(1, 1, 2, 2, 2, 3),   counts = c(10, 15, 20, 5, 8, 12) ) create_report_ytd_medians(data, c(\"A\", \"B\", \"C\"), 2) #>   disease median_counts #> 1       A            15 #> 2       B             5 #> 3       C             0"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_annual_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create annual counts internal report from an EpiTrax object — epitrax_ireport_annual_counts","title":"Create annual counts internal report from an EpiTrax object — epitrax_ireport_annual_counts","text":"epitrax_ireport_annual_counts generates internal report annual counts disease EpiTrax object data.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_annual_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create annual counts internal report from an EpiTrax object — epitrax_ireport_annual_counts","text":"","code":"epitrax_ireport_annual_counts(epitrax)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_annual_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create annual counts internal report from an EpiTrax object — epitrax_ireport_annual_counts","text":"epitrax Object class epitrax.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_annual_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create annual counts internal report from an EpiTrax object — epitrax_ireport_annual_counts","text":"Updated EpiTrax object annual_counts added internal_reports field.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_annual_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create annual counts internal report from an EpiTrax object — epitrax_ireport_annual_counts","text":"","code":"data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                            package = \"epitraxr\") disease_lists <- list(   internal = \"use_defaults\",   public = \"use_defaults\" )  epitrax <- setup_epitrax(   filepath = data_file,   config_file = config_file,   disease_list_files = disease_lists ) |>  epitrax_ireport_annual_counts() #> Warning: You have not provided a disease list for internal reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with a column named #>  #> \t'EpiTrax_name' #> Warning: You have not provided a disease list for public reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with columns named #>  #> \t'EpiTrax_name' and 'Public_name'  epitrax$internal_reports$annual_counts #>      disease 2019 2020 2021 2022 2023 2024 #> 1   COVID-19 1014 1627 2398 1855  908 1191 #> 2 Chickenpox  218  318  263  234  249  292 #> 3  Influenza  625 1733 1889 2289 1664 1466 #> 4    Measles  211  326  292  414  586  304 #> 5   Syphilis  278  356  439  398  577  269"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_monthly_avgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create monthly averages internal report from an EpiTrax object — epitrax_ireport_monthly_avgs","title":"Create monthly averages internal report from an EpiTrax object — epitrax_ireport_monthly_avgs","text":"epitrax_ireport_monthly_avgs generates internal report monthly averages years EpiTrax object data, option exclude current report year.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_monthly_avgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create monthly averages internal report from an EpiTrax object — epitrax_ireport_monthly_avgs","text":"","code":"epitrax_ireport_monthly_avgs(epitrax, exclude.report.year = FALSE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_monthly_avgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create monthly averages internal report from an EpiTrax object — epitrax_ireport_monthly_avgs","text":"epitrax Object class epitrax. exclude.report.year Logical indicating whether exclude current report year report. Defaults FALSE.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_monthly_avgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create monthly averages internal report from an EpiTrax object — epitrax_ireport_monthly_avgs","text":"Updated EpiTrax object monthly averages report added internal_reports field.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_monthly_avgs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create monthly averages internal report from an EpiTrax object — epitrax_ireport_monthly_avgs","text":"","code":"data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                            package = \"epitraxr\") disease_lists <- list(   internal = \"use_defaults\",   public = \"use_defaults\" )  epitrax <- setup_epitrax(   filepath = data_file,   config_file = config_file,   disease_list_files = disease_lists ) |>  epitrax_ireport_monthly_avgs() #> Warning: You have not provided a disease list for internal reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with a column named #>  #> \t'EpiTrax_name' #> Warning: You have not provided a disease list for public reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with columns named #>  #> \t'EpiTrax_name' and 'Public_name'  names(epitrax$internal_reports) #> [1] \"monthly_avgs_2019-2024\""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_monthly_counts_all_yrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create monthly counts internal report for all years from an EpiTrax object — epitrax_ireport_monthly_counts_all_yrs","title":"Create monthly counts internal report for all years from an EpiTrax object — epitrax_ireport_monthly_counts_all_yrs","text":"epitrax_ireport_monthly_counts_all_yrs generates internal reports monthly counts year EpiTrax object data.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_monthly_counts_all_yrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create monthly counts internal report for all years from an EpiTrax object — epitrax_ireport_monthly_counts_all_yrs","text":"","code":"epitrax_ireport_monthly_counts_all_yrs(epitrax)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_monthly_counts_all_yrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create monthly counts internal report for all years from an EpiTrax object — epitrax_ireport_monthly_counts_all_yrs","text":"epitrax Object class epitrax.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_monthly_counts_all_yrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create monthly counts internal report for all years from an EpiTrax object — epitrax_ireport_monthly_counts_all_yrs","text":"Updated EpiTrax object monthly counts reports year added internal_reports field.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_monthly_counts_all_yrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create monthly counts internal report for all years from an EpiTrax object — epitrax_ireport_monthly_counts_all_yrs","text":"","code":"data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                            package = \"epitraxr\") disease_lists <- list(   internal = \"use_defaults\",   public = \"use_defaults\" )  epitrax <- setup_epitrax(   filepath = data_file,   config_file = config_file,   disease_list_files = disease_lists ) |>  epitrax_ireport_monthly_counts_all_yrs() #> Warning: You have not provided a disease list for internal reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with a column named #>  #> \t'EpiTrax_name' #> Warning: You have not provided a disease list for public reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with columns named #>  #> \t'EpiTrax_name' and 'Public_name'  names(epitrax$internal_reports) #> [1] \"monthly_counts_2019\" \"monthly_counts_2020\" \"monthly_counts_2021\" #> [4] \"monthly_counts_2022\" \"monthly_counts_2023\" \"monthly_counts_2024\""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_ytd_counts_for_month.html","id":null,"dir":"Reference","previous_headings":"","what":"Create year-to-date (YTD) counts internal report for a given month from an EpiTrax object — epitrax_ireport_ytd_counts_for_month","title":"Create year-to-date (YTD) counts internal report for a given month from an EpiTrax object — epitrax_ireport_ytd_counts_for_month","text":"epitrax_ireport_ytd_counts_for_month generates internal report year--date counts specific month EpiTrax object data.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_ytd_counts_for_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create year-to-date (YTD) counts internal report for a given month from an EpiTrax object — epitrax_ireport_ytd_counts_for_month","text":"","code":"epitrax_ireport_ytd_counts_for_month(epitrax, as.rates = FALSE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_ytd_counts_for_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create year-to-date (YTD) counts internal report for a given month from an EpiTrax object — epitrax_ireport_ytd_counts_for_month","text":"epitrax Object class epitrax. .rates Logical. TRUE, returns rates per 100k instead raw counts.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_ytd_counts_for_month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create year-to-date (YTD) counts internal report for a given month from an EpiTrax object — epitrax_ireport_ytd_counts_for_month","text":"Updated EpiTrax object report added internal_reports field.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_ireport_ytd_counts_for_month.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create year-to-date (YTD) counts internal report for a given month from an EpiTrax object — epitrax_ireport_ytd_counts_for_month","text":"","code":"data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                            package = \"epitraxr\") disease_lists <- list(   internal = \"use_defaults\",   public = \"use_defaults\" )  epitrax <- setup_epitrax(   filepath = data_file,   config_file = config_file,   disease_list_files = disease_lists ) |>  epitrax_ireport_ytd_counts_for_month(as.rates = TRUE) #> Warning: You have not provided a disease list for internal reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with a column named #>  #> \t'EpiTrax_name' #> Warning: You have not provided a disease list for public reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with columns named #>  #> \t'EpiTrax_name' and 'Public_name'  names(epitrax$internal_reports) #> [1] \"ytd_rates\""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_preport_combined_month_ytd.html","id":null,"dir":"Reference","previous_headings":"","what":"Create combined monthly/YTD stats public report from an EpiTrax object — epitrax_preport_combined_month_ytd","title":"Create combined monthly/YTD stats public report from an EpiTrax object — epitrax_preport_combined_month_ytd","text":"epitrax_preport_combined_month_ytd generates public report monthly year--date (YTD) disease statistics report month EpiTrax object data.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_preport_combined_month_ytd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create combined monthly/YTD stats public report from an EpiTrax object — epitrax_preport_combined_month_ytd","text":"","code":"epitrax_preport_combined_month_ytd(epitrax)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_preport_combined_month_ytd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create combined monthly/YTD stats public report from an EpiTrax object — epitrax_preport_combined_month_ytd","text":"epitrax Object class epitrax.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_preport_combined_month_ytd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create combined monthly/YTD stats public report from an EpiTrax object — epitrax_preport_combined_month_ytd","text":"Updated EpiTrax object YTD rates report added public_reports field.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_preport_combined_month_ytd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create combined monthly/YTD stats public report from an EpiTrax object — epitrax_preport_combined_month_ytd","text":"","code":"data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                            package = \"epitraxr\") disease_lists <- list(   internal = \"use_defaults\",   public = \"use_defaults\" )  epitrax <- setup_epitrax(   filepath = data_file,   config_file = config_file,   disease_list_files = disease_lists ) |>  epitrax_preport_combined_month_ytd() #> Warning: You have not provided a disease list for internal reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with a column named #>  #> \t'EpiTrax_name' #> Warning: You have not provided a disease list for public reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with columns named #>  #> \t'EpiTrax_name' and 'Public_name'  names(epitrax$public_reports) #> [1] \"public_report_combined_Dec2024\""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_preport_month_crosssections.html","id":null,"dir":"Reference","previous_headings":"","what":"Create monthly cross-section reports from an EpiTrax object — epitrax_preport_month_crosssections","title":"Create monthly cross-section reports from an EpiTrax object — epitrax_preport_month_crosssections","text":"epitrax_preport_month_crosssections generates monthly cross-section reports. compare counts given month monthly averages month across previous years.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_preport_month_crosssections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create monthly cross-section reports from an EpiTrax object — epitrax_preport_month_crosssections","text":"","code":"epitrax_preport_month_crosssections(epitrax, month_offsets = 0:3)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_preport_month_crosssections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create monthly cross-section reports from an EpiTrax object — epitrax_preport_month_crosssections","text":"epitrax Object class epitrax. month_offsets Numeric vector month offsets create reports . Defaults 0:3, generates reports current month three previous months.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_preport_month_crosssections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create monthly cross-section reports from an EpiTrax object — epitrax_preport_month_crosssections","text":"Updated EpiTrax object monthly cross-section reports added public_reports field.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_preport_month_crosssections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create monthly cross-section reports from an EpiTrax object — epitrax_preport_month_crosssections","text":"","code":"data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                            package = \"epitraxr\") disease_lists <- list(   internal = \"use_defaults\",   public = \"use_defaults\" )  epitrax <- setup_epitrax(   filepath = data_file,   config_file = config_file,   disease_list_files = disease_lists ) |>  epitrax_preport_month_crosssections(month_offsets = 0:1) #> Warning: You have not provided a disease list for internal reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with a column named #>  #> \t'EpiTrax_name' #> Warning: You have not provided a disease list for public reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with columns named #>  #> \t'EpiTrax_name' and 'Public_name'  names(epitrax$public_reports) #> [1] \"public_report_Dec2024\" \"public_report_Nov2024\""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_preport_ytd_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"Create year-to-date (YTD) rates public report from an EpiTrax object — epitrax_preport_ytd_rates","title":"Create year-to-date (YTD) rates public report from an EpiTrax object — epitrax_preport_ytd_rates","text":"epitrax_preport_ytd_rates generates public report year--date rates current month EpiTrax object data.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_preport_ytd_rates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create year-to-date (YTD) rates public report from an EpiTrax object — epitrax_preport_ytd_rates","text":"","code":"epitrax_preport_ytd_rates(epitrax)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_preport_ytd_rates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create year-to-date (YTD) rates public report from an EpiTrax object — epitrax_preport_ytd_rates","text":"epitrax Object class epitrax.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_preport_ytd_rates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create year-to-date (YTD) rates public report from an EpiTrax object — epitrax_preport_ytd_rates","text":"Updated EpiTrax object YTD rates report added public_reports field.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_preport_ytd_rates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create year-to-date (YTD) rates public report from an EpiTrax object — epitrax_preport_ytd_rates","text":"","code":"data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                            package = \"epitraxr\") disease_lists <- list(   internal = \"use_defaults\",   public = \"use_defaults\" )  epitrax <- setup_epitrax(   filepath = data_file,   config_file = config_file,   disease_list_files = disease_lists ) |>  epitrax_preport_ytd_rates() #> Warning: You have not provided a disease list for internal reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with a column named #>  #> \t'EpiTrax_name' #> Warning: You have not provided a disease list for public reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with columns named #>  #> \t'EpiTrax_name' and 'Public_name'  names(epitrax$public_reports) #> [1] \"public_report_YTD\""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_report_grouped_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Create grouped disease statistics report from an EpiTrax object — epitrax_report_grouped_stats","title":"Create grouped disease statistics report from an EpiTrax object — epitrax_report_grouped_stats","text":"epitrax_report_grouped_stats generates comprehensive report current historical statistics diseases organized group. report includes monthly counts/rates, historical averages medians, year--date counts, trend analysis. can run either internal public reports.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_report_grouped_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create grouped disease statistics report from an EpiTrax object — epitrax_report_grouped_stats","text":"","code":"epitrax_report_grouped_stats(epitrax, is.public = FALSE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_report_grouped_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create grouped disease statistics report from an EpiTrax object — epitrax_report_grouped_stats","text":"epitrax Object class epitrax. .public Logical indicating whether generate public report using public disease list. FALSE (default), generates internal report using internal disease list.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_report_grouped_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create grouped disease statistics report from an EpiTrax object — epitrax_report_grouped_stats","text":"Updated EpiTrax object grouped statistics report added either internal_reports public_reports field, depending .public parameter.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_report_grouped_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create grouped disease statistics report from an EpiTrax object — epitrax_report_grouped_stats","text":"","code":"data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                            package = \"epitraxr\") disease_lists <- list(   internal = \"use_defaults\",   public = \"use_defaults\" )  epitrax <- setup_epitrax(   filepath = data_file,   config_file = config_file,   disease_list_files = disease_lists ) |>  epitrax_report_grouped_stats() #> Warning: You have not provided a disease list for internal reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with a column named #>  #> \t'EpiTrax_name' #> Warning: You have not provided a disease list for public reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with columns named #>  #> \t'EpiTrax_name' and 'Public_name' #> Warning: The parameter 'diseases' should contain a 'Group_name' column. Since, no groups were provided, all diseases will be 'Uncategorized'.  names(epitrax$internal_reports) #> [1] \"grouped_stats_2019-2024\""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_report_monthly_medians.html","id":null,"dir":"Reference","previous_headings":"","what":"Create monthly medians report from an EpiTrax object — epitrax_report_monthly_medians","title":"Create monthly medians report from an EpiTrax object — epitrax_report_monthly_medians","text":"epitrax_report_monthly_medians generates report monthly medians years EpiTrax object data, option exclude current report year. can run either internal public reports.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_report_monthly_medians.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create monthly medians report from an EpiTrax object — epitrax_report_monthly_medians","text":"","code":"epitrax_report_monthly_medians(   epitrax,   is.public = FALSE,   exclude.report.year = FALSE )"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_report_monthly_medians.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create monthly medians report from an EpiTrax object — epitrax_report_monthly_medians","text":"epitrax Object class epitrax. .public Logical indicating whether generate public report using public disease list. FALSE (default), generates internal report using internal disease list. exclude.report.year Logical indicating whether exclude current report year report. Defaults FALSE.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_report_monthly_medians.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create monthly medians report from an EpiTrax object — epitrax_report_monthly_medians","text":"Updated EpiTrax object monthly medians report added either internal_reports public_reports field, depending .public parameter.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_report_monthly_medians.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create monthly medians report from an EpiTrax object — epitrax_report_monthly_medians","text":"","code":"data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                            package = \"epitraxr\") disease_lists <- list(   internal = \"use_defaults\",   public = \"use_defaults\" )  epitrax <- setup_epitrax(   filepath = data_file,   config_file = config_file,   disease_list_files = disease_lists ) |>  epitrax_report_monthly_medians() #> Warning: You have not provided a disease list for internal reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with a column named #>  #> \t'EpiTrax_name' #> Warning: You have not provided a disease list for public reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with columns named #>  #> \t'EpiTrax_name' and 'Public_name'  names(epitrax$internal_reports) #> [1] \"monthly_medians_2019-2024\""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_report_ytd_medians.html","id":null,"dir":"Reference","previous_headings":"","what":"Create year-to-date (YTD) medians report from an EpiTrax object — epitrax_report_ytd_medians","title":"Create year-to-date (YTD) medians report from an EpiTrax object — epitrax_report_ytd_medians","text":"epitrax_report_ytd_medians generates report median year--date counts disease current report month across years EpiTrax object data, option exclude current report year. can run either internal public reports.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_report_ytd_medians.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create year-to-date (YTD) medians report from an EpiTrax object — epitrax_report_ytd_medians","text":"","code":"epitrax_report_ytd_medians(   epitrax,   is.public = FALSE,   exclude.report.year = FALSE )"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_report_ytd_medians.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create year-to-date (YTD) medians report from an EpiTrax object — epitrax_report_ytd_medians","text":"epitrax Object class epitrax. .public Logical indicating whether generate public report using public disease list. FALSE (default), generates internal report using internal disease list. exclude.report.year Logical indicating whether exclude current report year report. Defaults FALSE.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_report_ytd_medians.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create year-to-date (YTD) medians report from an EpiTrax object — epitrax_report_ytd_medians","text":"Updated EpiTrax object YTD medians report added either internal_reports public_reports field, depending .public parameter.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_report_ytd_medians.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create year-to-date (YTD) medians report from an EpiTrax object — epitrax_report_ytd_medians","text":"","code":"data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                            package = \"epitraxr\") disease_lists <- list(   internal = \"use_defaults\",   public = \"use_defaults\" )  epitrax <- setup_epitrax(   filepath = data_file,   config_file = config_file,   disease_list_files = disease_lists ) |>  epitrax_report_ytd_medians() #> Warning: You have not provided a disease list for internal reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with a column named #>  #> \t'EpiTrax_name' #> Warning: You have not provided a disease list for public reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with columns named #>  #> \t'EpiTrax_name' and 'Public_name'  names(epitrax$internal_reports) #> [1] \"ytd_medians_2019-2024\""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_set_config_from_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Set report configuration of EpiTrax object from config file — epitrax_set_config_from_file","title":"Set report configuration of EpiTrax object from config file — epitrax_set_config_from_file","text":"epitrax_set_config_from_file reads report configuration file adds EpiTrax object.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_set_config_from_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set report configuration of EpiTrax object from config file — epitrax_set_config_from_file","text":"","code":"epitrax_set_config_from_file(epitrax, filepath)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_set_config_from_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set report configuration of EpiTrax object from config file — epitrax_set_config_from_file","text":"epitrax Object class epitrax. filepath Path report configuration file.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_set_config_from_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set report configuration of EpiTrax object from config file — epitrax_set_config_from_file","text":"Updated EpiTrax object config field set.","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_set_config_from_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set report configuration of EpiTrax object from config file — epitrax_set_config_from_file","text":"","code":"config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                            package = \"epitraxr\") epitrax <- structure(   list(data = c(1,2,3)),   class = \"epitrax\" ) epitrax <- epitrax_set_config_from_file(epitrax, config_file)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_set_config_from_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Set report configuration of EpiTrax object from list — epitrax_set_config_from_list","title":"Set report configuration of EpiTrax object from list — epitrax_set_config_from_list","text":"epitrax_set_config_from_list sets report configuration given list.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_set_config_from_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set report configuration of EpiTrax object from list — epitrax_set_config_from_list","text":"","code":"epitrax_set_config_from_list(epitrax, config = NULL)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_set_config_from_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set report configuration of EpiTrax object from list — epitrax_set_config_from_list","text":"epitrax Object class epitrax. config Optional list config parameters. omitted, default values used.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_set_config_from_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set report configuration of EpiTrax object from list — epitrax_set_config_from_list","text":"Updated EpiTrax object config field set.","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_set_config_from_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set report configuration of EpiTrax object from list — epitrax_set_config_from_list","text":"","code":"config <- list(  current_population = 56000,  avg_5yr_population = 57000,  rounding_decimals = 3,  generate_csvs = FALSE ) epitrax <- structure(   list(data = c(1,2,3)),   class = \"epitrax\" ) epitrax <- epitrax_set_config_from_list(epitrax, config)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_set_report_diseases.html","id":null,"dir":"Reference","previous_headings":"","what":"Set report diseases in EpiTrax object — epitrax_set_report_diseases","title":"Set report diseases in EpiTrax object — epitrax_set_report_diseases","text":"epitrax_set_report_diseases reads internal public disease lists adds EpiTrax object.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_set_report_diseases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set report diseases in EpiTrax object — epitrax_set_report_diseases","text":"","code":"epitrax_set_report_diseases(epitrax, disease_list_files = NULL)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_set_report_diseases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set report diseases in EpiTrax object — epitrax_set_report_diseases","text":"epitrax Object class epitrax. disease_list_files Optional list containing filepaths internal public report disease lists. omitted, default lists used warning given.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_set_report_diseases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set report diseases in EpiTrax object — epitrax_set_report_diseases","text":"Updated EpiTrax object report_diseases field set.","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_set_report_diseases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set report diseases in EpiTrax object — epitrax_set_report_diseases","text":"","code":"i_file <- system.file(\"tinytest/test_files/disease_lists/internal_list.csv\",                        package = \"epitraxr\") p_file <- system.file(\"tinytest/test_files/disease_lists/public_list.csv\",                        package = \"epitraxr\")  epitrax <- structure(   list(data = c(1,2,3)),   class = \"epitrax\" )  epitrax <- epitrax_set_report_diseases(   epitrax,   disease_list_files = list(     internal = i_file,     public = p_file   ) )"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_csvs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write reports from EpiTrax object to CSV files — epitrax_write_csvs","title":"Write reports from EpiTrax object to CSV files — epitrax_write_csvs","text":"epitrax_write_csvs writes internal public reports EpiTrax object CSV files specified filesystem. write files EpiTrax config setting generate_csvs set false.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_csvs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write reports from EpiTrax object to CSV files — epitrax_write_csvs","text":"","code":"epitrax_write_csvs(epitrax, fsys)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_csvs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write reports from EpiTrax object to CSV files — epitrax_write_csvs","text":"epitrax Object class epitrax. fsys Filesystem list containing paths internal public reports.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_csvs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write reports from EpiTrax object to CSV files — epitrax_write_csvs","text":"original EpiTrax object, unchanged.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_csvs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write reports from EpiTrax object to CSV files — epitrax_write_csvs","text":"","code":"fsys <- list(   internal = file.path(tempdir(), \"internal_reports\"),   public = file.path(tempdir(), \"public_reports\"),   settings = file.path(tempdir(), \"report_settings\") ) data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                            package = \"epitraxr\") disease_lists <- list(   internal = \"use_defaults\",   public = \"use_defaults\" )  epitrax <- setup_epitrax(   filepath = data_file,   config_file = config_file,   disease_list_files = disease_lists ) |>  epitrax_preport_ytd_rates() |>  epitrax_write_csvs(fsys = fsys) #> Warning: You have not provided a disease list for internal reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with a column named #>  #> \t'EpiTrax_name' #> Warning: You have not provided a disease list for public reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with columns named #>  #> \t'EpiTrax_name' and 'Public_name'  # Cleanup unlink(unlist(fsys, use.names = FALSE), recursive = TRUE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_pdf_grouped_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Write grouped statistics reports from EpiTrax object to PDF files — epitrax_write_pdf_grouped_stats","title":"Write grouped statistics reports from EpiTrax object to PDF files — epitrax_write_pdf_grouped_stats","text":"epitrax_write_pdf_grouped_stats writes grouped statistics reports EpiTrax object PDF files using formatted template. processes internal public grouped statistics reports.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_pdf_grouped_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write grouped statistics reports from EpiTrax object to PDF files — epitrax_write_pdf_grouped_stats","text":"","code":"epitrax_write_pdf_grouped_stats(epitrax, params, fsys, trend.only = FALSE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_pdf_grouped_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write grouped statistics reports from EpiTrax object to PDF files — epitrax_write_pdf_grouped_stats","text":"epitrax Object class epitrax. params List. Report parameters containing: title: Report title (defaults \"Grouped Report\") fsys Filesystem list containing paths internal public reports. trend.Logical. Whether show trend PDF report.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_pdf_grouped_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write grouped statistics reports from EpiTrax object to PDF files — epitrax_write_pdf_grouped_stats","text":"original EpiTrax object, unchanged.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_pdf_grouped_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write grouped statistics reports from EpiTrax object to PDF files — epitrax_write_pdf_grouped_stats","text":"","code":"# Don't run PDF examples in case missing LaTeX if (FALSE) { # \\dontrun{  fsys <- list(    internal = file.path(tempdir(), \"internal_reports\"),    public = file.path(tempdir(), \"public_reports\"),    settings = file.path(tempdir(), \"report_settings\")  )  fsys <- setup_filesystem(fsys)   data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                           package = \"epitraxr\")  config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                             package = \"epitraxr\")  disease_lists <- list(    internal = \"use_defaults\",    public = \"use_defaults\"  )   params <- list(    title = \"Monthly Grouped Disease Statistics\"  )   epitrax <- setup_epitrax(    filepath = data_file,    config_file = config_file,    disease_list_files = disease_lists  ) |>   epitrax_report_grouped_stats() |>   epitrax_write_pdf_grouped_stats(params = params, fsys = fsys)   # Cleanup  unlink(unlist(fsys, use.names = FALSE), recursive = TRUE) } # }"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_pdf_public_reports.html","id":null,"dir":"Reference","previous_headings":"","what":"Create formatted PDF report of monthly cross-section reports — epitrax_write_pdf_public_reports","title":"Create formatted PDF report of monthly cross-section reports — epitrax_write_pdf_public_reports","text":"epitrax_write_pdf_public_reports writes PDF report public report, excluding grouped stats reports (handled epitrax_write_pdf_grouped_stats). PDF uses pretty formatting adds header footer.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_pdf_public_reports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create formatted PDF report of monthly cross-section reports — epitrax_write_pdf_public_reports","text":"","code":"epitrax_write_pdf_public_reports(epitrax, fsys, trend.only = FALSE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_pdf_public_reports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create formatted PDF report of monthly cross-section reports — epitrax_write_pdf_public_reports","text":"epitrax Object class epitrax. fsys Filesystem list containing paths internal public reports. trend.Logical. Whether show trend PDF report.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_pdf_public_reports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create formatted PDF report of monthly cross-section reports — epitrax_write_pdf_public_reports","text":"original EpiTrax object, unchanged.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_pdf_public_reports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create formatted PDF report of monthly cross-section reports — epitrax_write_pdf_public_reports","text":"","code":"if (FALSE) { # \\dontrun{  fsys <- list(    internal = file.path(tempdir(), \"internal_reports\"),    public = file.path(tempdir(), \"public_reports\"),    settings = file.path(tempdir(), \"report_settings\")  )  fsys <- setup_filesystem(fsys)   data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                           package = \"epitraxr\")  config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                             package = \"epitraxr\")  disease_lists <- list(    internal = \"use_defaults\",    public = \"use_defaults\"  )   epitrax <- setup_epitrax(    filepath = data_file,    config_file = config_file,    disease_list_files = disease_lists  ) |>   epitrax_preport_month_crosssections(month_offsets = 0) |>   epitrax_write_pdf_public_reports(fsys = fsys)   # Cleanup  unlink(unlist(fsys, use.names = FALSE), recursive = TRUE) } # }"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_xlsxs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write reports from EpiTrax object to Excel files — epitrax_write_xlsxs","title":"Write reports from EpiTrax object to Excel files — epitrax_write_xlsxs","text":"epitrax_write_xlsxs writes internal public reports EpiTrax object Excel files specified filesystem. Combines internal reports one Excel file separate sheets report. Likewise public reports.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_xlsxs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write reports from EpiTrax object to Excel files — epitrax_write_xlsxs","text":"","code":"epitrax_write_xlsxs(epitrax, fsys)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_xlsxs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write reports from EpiTrax object to Excel files — epitrax_write_xlsxs","text":"epitrax Object class epitrax. fsys Filesystem list containing paths internal public reports.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_xlsxs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write reports from EpiTrax object to Excel files — epitrax_write_xlsxs","text":"original EpiTrax object, unchanged.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitrax_write_xlsxs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write reports from EpiTrax object to Excel files — epitrax_write_xlsxs","text":"","code":"fsys <- list(   internal = file.path(tempdir(), \"internal_reports\"),   public = file.path(tempdir(), \"public_reports\"),   settings = file.path(tempdir(), \"report_settings\") ) fsys <- setup_filesystem(fsys)  data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") config_file <- system.file(\"tinytest/test_files/configs/good_config.yaml\",                            package = \"epitraxr\") disease_lists <- list(   internal = \"use_defaults\",   public = \"use_defaults\" )  epitrax <- setup_epitrax(   filepath = data_file,   config_file = config_file,   disease_list_files = disease_lists ) |>  epitrax_preport_ytd_rates() |>  epitrax_write_xlsxs(fsys = fsys) #> Warning: You have not provided a disease list for internal reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with a column named #>  #> \t'EpiTrax_name' #> Warning: You have not provided a disease list for public reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with columns named #>  #> \t'EpiTrax_name' and 'Public_name'  # Cleanup unlink(unlist(fsys, use.names = FALSE), recursive = TRUE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitraxr_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Create epitraxr config object — epitraxr_config","title":"Create epitraxr config object — epitraxr_config","text":"epitraxr_config creates list configuration options used generating reports.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitraxr_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create epitraxr config object — epitraxr_config","text":"","code":"epitraxr_config(   current_population = 1e+05,   avg_5yr_population = 1e+05,   rounding_decimals = 2,   generate_csvs = TRUE,   trend_threshold = 0.15 )"},{"path":"https://epiforesite.github.io/epitraxr/reference/epitraxr_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create epitraxr config object — epitraxr_config","text":"current_population Integer. Defaults 100,000. avg_5yr_population Integer. Defaults 100,000. rounding_decimals Integer. Defaults 2. generate_csvs Logical. Defaults TRUE. trend_threshold Numeric. Defaults 0.15.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitraxr_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create epitraxr config object — epitraxr_config","text":"named list 'keys' corresponding config options.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/epitraxr_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create epitraxr config object — epitraxr_config","text":"","code":"epitraxr_config(   current_population = 56000,   avg_5yr_population = 57000,   rounding_decimals = 3,   generate_csvs = FALSE,   trend_threshold = 0.2 ) #> $current_population #> [1] 56000 #>  #> $avg_5yr_population #> [1] 57000 #>  #> $rounding_decimals #> [1] 3 #>  #> $generate_csvs #> [1] FALSE #>  #> $trend_threshold #> [1] 0.2 #>"},{"path":"https://epiforesite.github.io/epitraxr/reference/format_epitrax_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Format EpiTrax data for report generation — format_epitrax_data","title":"Format EpiTrax data for report generation — format_epitrax_data","text":"format_epitrax_data prepares input EpiTrax data use report generation functions package. adds counts column, renames columns standard names used package (\"disease\", \"month\", \"year\", \"counts\"), rearranges columns consistency.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/format_epitrax_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format EpiTrax data for report generation — format_epitrax_data","text":"","code":"format_epitrax_data(data)"},{"path":"https://epiforesite.github.io/epitraxr/reference/format_epitrax_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format EpiTrax data for report generation — format_epitrax_data","text":"data Dataframe. Must contain columns: patient_disease (character, unchanged EpiTrax export) patient_mmwr_year (integer, unchanged EpiTrax export) month (integer, converted patient_mmwr_week mmwr_week_to_month())","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/format_epitrax_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format EpiTrax data for report generation — format_epitrax_data","text":"standardized data frame columns \"disease\", \"month\", \"year\", \"counts\".","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/reference/format_epitrax_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format EpiTrax data for report generation — format_epitrax_data","text":"","code":"df <- data.frame(   patient_mmwr_year = c(2020L, 2020L),   month = c(1, 2),   patient_disease = c(\"A\", \"B\") ) df <- format_epitrax_data(df)"},{"path":"https://epiforesite.github.io/epitraxr/reference/get_month_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get monthly counts for each disease — get_month_counts","title":"Get monthly counts for each disease — get_month_counts","text":"get_month_counts aggregates disease counts month year. helper function used internally report generation functions summarize monthly disease counts.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_month_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get monthly counts for each disease — get_month_counts","text":"","code":"get_month_counts(data)"},{"path":"https://epiforesite.github.io/epitraxr/reference/get_month_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get monthly counts for each disease — get_month_counts","text":"data Dataframe. Must contain columns: disease (character) year (integer) month (integer) counts (integer)","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_month_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get monthly counts for each disease — get_month_counts","text":"dataframe aggregated monthly counts","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_month_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get monthly counts for each disease — get_month_counts","text":"","code":"df <- data.frame(   disease = c(\"Flu\", \"Flu\", \"Measles\"),   year = c(2020, 2020, 2020),   month = c(1, 1, 2),   counts = c(5, 3, 2) ) get_month_counts(df) #>   disease year month counts #> 1     Flu 2020     1      8 #> 2 Measles 2020     2      2"},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in the report config YAML file — get_report_config","title":"Read in the report config YAML file — get_report_config","text":"'get_report_config' reads config YAML file. Missing fields set default values warning issued. config file can following fields: current_population: Integer. Current population size. avg_5yr_population: Integer. Average population last 5 years. rounding_decimals: Integer. Number decimals round report values . generate_csvs: Logical. Whether generate CSV files. trend_threshold: Numeric. Threshold trend calculations.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in the report config YAML file — get_report_config","text":"","code":"get_report_config(filepath)"},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in the report config YAML file — get_report_config","text":"filepath Filepath. Path report config file.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in the report config YAML file — get_report_config","text":"named list attribute 'keys' file.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_config.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read in the report config YAML file — get_report_config","text":"See example config file : system.file(\"sample_data/sample_config.yml\", package = \"epitraxr\").","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in the report config YAML file — get_report_config","text":"","code":"config_file <- system.file(\"sample_data/sample_config.yml\",                           package = \"epitraxr\") report_config <- get_report_config(config_file)"},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases.html","id":null,"dir":"Reference","previous_headings":"","what":"Get both internal and public disease lists — get_report_diseases","title":"Get both internal and public disease lists — get_report_diseases","text":"get_report_diseases convenience function combines get_report_diseases_internal get_report_diseases_public.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get both internal and public disease lists — get_report_diseases","text":"","code":"get_report_diseases(internal, public, defaults)"},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get both internal and public disease lists — get_report_diseases","text":"internal Filepath. Path internal disease list CSV file. public Filepath. Path public disease list CSV file. defaults String vector. List default diseases use either file exist.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get both internal and public disease lists — get_report_diseases","text":"list two elements: internal: Dataframe EpiTrax_name column public: Dataframe EpiTrax_name Public_name columns","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get both internal and public disease lists — get_report_diseases","text":"","code":"# Using default lists (when files don't exist) default_list <- c(\"Measles\", \"Chickenpox\") disease_lists <- get_report_diseases(\"\", \"\", default_list) #> Warning: You have not provided a disease list for internal reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with a column named #>  #> \t'EpiTrax_name' #> Warning: You have not provided a disease list for public reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with columns named #>  #> \t'EpiTrax_name' and 'Public_name'  # Using disease list files i_file <- system.file(\"tinytest/test_files/disease_lists/internal_list.csv\",                        package = \"epitraxr\") p_file <- system.file(\"tinytest/test_files/disease_lists/public_list.csv\",                        package = \"epitraxr\") disease_lists <- get_report_diseases(   internal = i_file,   public = p_file,   defaults = default_list )"},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the internal disease list — get_report_diseases_internal","title":"Get the internal disease list — get_report_diseases_internal","text":"'get_report_diseases_internal' reads internal list given CSV file uses default diseases, file exist.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the internal disease list — get_report_diseases_internal","text":"","code":"get_report_diseases_internal(filepath, defaults)"},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases_internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the internal disease list — get_report_diseases_internal","text":"filepath Filepath. Internal disease list CSV file. defaults String vector. List default diseases use file exist.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases_internal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the internal disease list — get_report_diseases_internal","text":"dataframe containing diseases include internal report possibly disease groupings.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases_internal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the internal disease list — get_report_diseases_internal","text":"provided internal disease list file must contain least column named EpiTrax_name contains EpiTrax disease names include report. file can optionally contain column named Group_name, maps diseases EpiTrax_name disease group. used reports include disease groupings. See example file : system.file(\"sample_data/sample_disease_list.csv\", package = \"epitraxr\")","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases_internal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the internal disease list — get_report_diseases_internal","text":"","code":"# Using default list (when file doesn't exist) default_list <- c(\"Measles\", \"Chickenpox\") disease_list <- get_report_diseases_internal(\"\", default_list) #> Warning: You have not provided a disease list for internal reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with a column named #>  #> \t'EpiTrax_name'  # Using a disease list file list_file <- system.file(\"sample_data/sample_disease_list.csv\",                         package = \"epitraxr\") disease_list <- get_report_diseases_internal(list_file, default_list)"},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases_public.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the public disease list — get_report_diseases_public","title":"Get the public disease list — get_report_diseases_public","text":"'get_report_diseases_public' reads public list given CSV file uses default diseases file exist.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases_public.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the public disease list — get_report_diseases_public","text":"","code":"get_report_diseases_public(filepath, defaults)"},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases_public.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the public disease list — get_report_diseases_public","text":"filepath Filepath. Public disease list CSV file. defaults String vector. List default diseases use file exist.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases_public.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the public disease list — get_report_diseases_public","text":"dataframe containing diseases include public report name use disease public report. may also contain disease groupings.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases_public.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the public disease list — get_report_diseases_public","text":"provided public disease list file must contain two columns named EpiTrax_name Public_name map EpiTrax disease names public-facing name public report. file can optionally contain column named Group_name, maps diseases EpiTrax_name disease group. used reports include disease groupings. See example file : system.file(\"sample_data/sample_disease_list.csv\", package = \"epitraxr\")","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_report_diseases_public.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the public disease list — get_report_diseases_public","text":"","code":"# Using default list (when file doesn't exist) default_list <- c(\"Measles\", \"Chickenpox\") disease_list <- get_report_diseases_public(\"\", default_list) #> Warning: You have not provided a disease list for public reports. #>  - The program will default to using only the diseases found in the input dataset. #>  - If you would like to use a different list, please include a file with columns named #>  #> \t'EpiTrax_name' and 'Public_name'  # Using a disease list file list_file <- system.file(\"sample_data/sample_disease_list.csv\",                         package = \"epitraxr\") disease_list <- get_report_diseases_public(list_file, default_list)"},{"path":"https://epiforesite.github.io/epitraxr/reference/get_yrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unique years from the data — get_yrs","title":"Get unique years from the data — get_yrs","text":"'get_yrs' extracts returns sorted unique years 'year' column data frame.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_yrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unique years from the data — get_yrs","text":"","code":"get_yrs(data)"},{"path":"https://epiforesite.github.io/epitraxr/reference/get_yrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unique years from the data — get_yrs","text":"data Dataframe. Must contain column: year (integer)","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_yrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unique years from the data — get_yrs","text":"Integer vector sorted unique years present data.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/get_yrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get unique years from the data — get_yrs","text":"","code":"df <- data.frame(year = c(2020, 2021, 2020, 2022)) get_yrs(df) #> [1] 2020 2021 2022"},{"path":"https://epiforesite.github.io/epitraxr/reference/mmwr_week_to_month.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert MMWR week to calendar month — mmwr_week_to_month","title":"Convert MMWR week to calendar month — mmwr_week_to_month","text":"mmwr_week_to_month calculates calendar month patient_mmwr_week patient_mmwr_year fields EpiTrax data. result stored month column patient_mmwr_week column removed.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/mmwr_week_to_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert MMWR week to calendar month — mmwr_week_to_month","text":"","code":"mmwr_week_to_month(data)"},{"path":"https://epiforesite.github.io/epitraxr/reference/mmwr_week_to_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert MMWR week to calendar month — mmwr_week_to_month","text":"data Dataframe. Must contain columns: patient_mmwr_year (integer) patient_mmwr_week (integer)","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/mmwr_week_to_month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert MMWR week to calendar month — mmwr_week_to_month","text":"input data frame added \"month\" column (integer 1-12) removed patient_mmwr_week column.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/mmwr_week_to_month.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert MMWR week to calendar month — mmwr_week_to_month","text":"","code":"df <- data.frame(  patient_mmwr_year = 2020L,  patient_mmwr_week = 1L,  patient_disease = \"A\" ) mmwr_week_to_month(df) #>   patient_mmwr_year patient_disease month #> 1              2020               A     1"},{"path":"https://epiforesite.github.io/epitraxr/reference/read_epitrax_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in EpiTrax data — read_epitrax_data","title":"Read in EpiTrax data — read_epitrax_data","text":"'read_epitrax_data' reads EpiTrax data CSV, validates, formats . also filters rows older given number years. input file must contain columns: patient_mmwr_year (integer) patient_mmwr_week (integer) patient_disease (character)","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/read_epitrax_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in EpiTrax data — read_epitrax_data","text":"","code":"read_epitrax_data(filepath = NULL, num_yrs = 5)"},{"path":"https://epiforesite.github.io/epitraxr/reference/read_epitrax_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in EpiTrax data — read_epitrax_data","text":"filepath Optional filepath. Data file CSV. parameter NULL, user prompted choose file interactively. num_yrs Integer. Number years data keep. Defaults 5.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/read_epitrax_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in EpiTrax data — read_epitrax_data","text":"validated formatted EpiTrax data input file.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/read_epitrax_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read in EpiTrax data — read_epitrax_data","text":"See example file : system.file(\"sample_data/sample_epitrax_data.csv\", package = \"epitraxr\")","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/read_epitrax_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in EpiTrax data — read_epitrax_data","text":"","code":"if (FALSE) { # \\dontrun{ # Interactive file chooser: read_epitrax_data() } # }  # Using a file path: data <- read_epitrax_data(  filepath = system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\"),  num_yrs = 3 ) head(data) #>      disease month year counts #> 3  Influenza     7 2021      1 #> 4   COVID-19     7 2024      1 #> 6  Influenza     4 2022      1 #> 7   COVID-19     6 2021      1 #> 9    Measles     4 2023      1 #> 11 Influenza     4 2021      1"},{"path":"https://epiforesite.github.io/epitraxr/reference/reshape_annual_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape data with each year as a separate column — reshape_annual_wide","title":"Reshape data with each year as a separate column — reshape_annual_wide","text":"'reshape_annual_wide' reshapes given data frame diseases rows years columns.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/reshape_annual_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape data with each year as a separate column — reshape_annual_wide","text":"","code":"reshape_annual_wide(data)"},{"path":"https://epiforesite.github.io/epitraxr/reference/reshape_annual_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape data with each year as a separate column — reshape_annual_wide","text":"data Dataframe. Must columns: disease (character) year (integer) counts (integer)","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/reshape_annual_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape data with each year as a separate column — reshape_annual_wide","text":"reshaped data frame.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/reshape_annual_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reshape data with each year as a separate column — reshape_annual_wide","text":"","code":"df <- data.frame(   disease = c(\"A\", \"A\", \"B\"),   year = c(2020, 2021, 2020),   counts = c(5, 7, 8) ) reshape_annual_wide(df) #>   disease 2020 2021 #> 1       A    5    7 #> 3       B    8    0"},{"path":"https://epiforesite.github.io/epitraxr/reference/reshape_monthly_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape data with each month as a separate column — reshape_monthly_wide","title":"Reshape data with each month as a separate column — reshape_monthly_wide","text":"'reshape_monthly_wide' reshapes given data frame diseases rows months columns.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/reshape_monthly_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape data with each month as a separate column — reshape_monthly_wide","text":"","code":"reshape_monthly_wide(data)"},{"path":"https://epiforesite.github.io/epitraxr/reference/reshape_monthly_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape data with each month as a separate column — reshape_monthly_wide","text":"data Dataframe. Must contain columns: disease (character) month (integer) counts (integer)","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/reshape_monthly_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape data with each month as a separate column — reshape_monthly_wide","text":"reshaped data frame.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/reshape_monthly_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reshape data with each month as a separate column — reshape_monthly_wide","text":"","code":"df <- data.frame(  disease = c(\"A\", \"B\"),  month = c(1, 2),  counts = c(5, 6) ) reshape_monthly_wide(df) #>   disease Jan Feb #> 1       A   5   0 #> 3       B   0   6"},{"path":"https://epiforesite.github.io/epitraxr/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the epitraxr Shiny Application — run_app","title":"Launch the epitraxr Shiny Application — run_app","text":"run_app launches interactive Shiny web application EpiTrax data analysis report generation. app provides user-friendly interface uploading data, configuring reports, generating various types disease surveillance reports.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the epitraxr Shiny Application — run_app","text":"","code":"run_app(...)"},{"path":"https://epiforesite.github.io/epitraxr/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch the epitraxr Shiny Application — run_app","text":"... Additional arguments passed shiny::shinyAppDir().","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/run_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch the epitraxr Shiny Application — run_app","text":"Starts execution app, printing port console.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/run_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch the epitraxr Shiny Application — run_app","text":"","code":"if (interactive()) {  run_app() }"},{"path":"https://epiforesite.github.io/epitraxr/reference/set_na_0.html","id":null,"dir":"Reference","previous_headings":"","what":"Set NA values to 0 — set_na_0","title":"Set NA values to 0 — set_na_0","text":"'set_na_0' sets NA values 0 data frame.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/set_na_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set NA values to 0 — set_na_0","text":"","code":"set_na_0(df)"},{"path":"https://epiforesite.github.io/epitraxr/reference/set_na_0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set NA values to 0 — set_na_0","text":"df Dataframe.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/set_na_0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set NA values to 0 — set_na_0","text":"Dataframe NA values replaced 0.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/set_na_0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set NA values to 0 — set_na_0","text":"","code":"df <- data.frame(year = c(2020, NA, 2022)) set_na_0(df) #>   year #> 1 2020 #> 2    0 #> 3 2022"},{"path":"https://epiforesite.github.io/epitraxr/reference/setup_epitrax.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup EpiTrax object with configuration and disease lists — setup_epitrax","title":"Setup EpiTrax object with configuration and disease lists — setup_epitrax","text":"setup_epitrax initializes EpiTrax object configuration report disease lists. convenience function combines create_epitrax_from_file(), epitrax_set_config_from_file(), epitrax_set_report_diseases().","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/setup_epitrax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup EpiTrax object with configuration and disease lists — setup_epitrax","text":"","code":"setup_epitrax(   filepath = NULL,   num_yrs = 5,   disease_list_files = NULL,   config_list = NULL,   config_file = NULL )"},{"path":"https://epiforesite.github.io/epitraxr/reference/setup_epitrax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup EpiTrax object with configuration and disease lists — setup_epitrax","text":"filepath Optional filepath. EpiTrax data file CSV. parameter NULL, user prompted choose file interactively. num_yrs Integer. Number years data keep. Defaults 5. disease_list_files Optional list containing filepaths internal public report disease lists. omitted, default lists used warning given. config_list, config_file Configuration options may specified list path YAML config file, respectively. one can specified time. specified, function return error. omitted, default config values used.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/setup_epitrax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup EpiTrax object with configuration and disease lists — setup_epitrax","text":"EpiTrax object configuration report diseases set.","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/reference/setup_epitrax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setup EpiTrax object with configuration and disease lists — setup_epitrax","text":"","code":"data_file <- system.file(\"sample_data/sample_epitrax_data.csv\",                          package = \"epitraxr\") disease_lists <- list(   internal = system.file(\"tinytest/test_files/disease_lists/internal_list.csv\",                          package = \"epitraxr\"),   public = system.file(\"tinytest/test_files/disease_lists/public_list.csv\",                        package = \"epitraxr\") )  epitrax <- setup_epitrax(   filepath = data_file,   disease_list_files = disease_lists )"},{"path":"https://epiforesite.github.io/epitraxr/reference/setup_filesystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup the report filesystem — setup_filesystem","title":"Setup the report filesystem — setup_filesystem","text":"setup_filesystem creates necessary folder structure optionally clears old reports. convenience function combines create_filesystem clear_old_reports.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/setup_filesystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup the report filesystem — setup_filesystem","text":"","code":"setup_filesystem(folders, clear.reports = FALSE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/setup_filesystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup the report filesystem — setup_filesystem","text":"folders List. Contains paths report folders elements: internal: Folder internal reports public: Folder public reports settings: Folder settings files clear.reports Logical. Whether clear old reports internal public folders. Defaults FALSE.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/setup_filesystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup the report filesystem — setup_filesystem","text":"input folders list, unchanged.","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/reference/setup_filesystem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setup the report filesystem — setup_filesystem","text":"","code":"# Create folders in a temporary directory folders <- list(   internal = file.path(tempdir(), \"internal\"),   public = file.path(tempdir(), \"public\"),   settings = file.path(tempdir(), \"settings\") ) setup_filesystem(folders) #> $internal #> [1] \"/tmp/RtmplfXdBH/internal\" #>  #> $public #> [1] \"/tmp/RtmplfXdBH/public\" #>  #> $settings #> [1] \"/tmp/RtmplfXdBH/settings\" #>  unlink(unlist(folders, use.names = FALSE), recursive = TRUE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/standardize_report_diseases.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize diseases for report — standardize_report_diseases","title":"Standardize diseases for report — standardize_report_diseases","text":"'standardize_report_diseases' removes rows data appear report adds rows diseases report, input dataset. Added rows filled 0s.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/standardize_report_diseases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize diseases for report — standardize_report_diseases","text":"","code":"standardize_report_diseases(data, diseases)"},{"path":"https://epiforesite.github.io/epitraxr/reference/standardize_report_diseases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize diseases for report — standardize_report_diseases","text":"data Dataframe. Current report data. diseases Character vector. Diseases include report.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/standardize_report_diseases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize diseases for report — standardize_report_diseases","text":"Report data rows diseases report.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/standardize_report_diseases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize diseases for report — standardize_report_diseases","text":"","code":"df <- data.frame(disease=c(\"A\",\"B\",\"D\"), counts=c(5,7,8)) standardize_report_diseases(df, c(\"A\",\"C\")) #>   disease counts #> 1       A      5 #> 2       C      0"},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate config — validate_config","title":"Validate config — validate_config","text":"validate_config checks values given config list. values missing invalid, set default values warning issued.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate config — validate_config","text":"","code":"validate_config(config)"},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate config — validate_config","text":"config Named list.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate config — validate_config","text":"named list 'keys' corresponding config options.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate config — validate_config","text":"","code":"validate_config(config = list()) #> Warning: These config fields are missing/invalid and will be set to defaults: #>  #>  - 'current_population' set to 100,000 #>  - 'avg_5yr_population' set to 'current_population' #>  - 'rounding_decimals' set to 2 #>  - 'generate_csvs' set to TRUE #>  - 'trend_threshold' set to 0.15 #> $current_population #> [1] 1e+05 #>  #> $avg_5yr_population #> [1] 1e+05 #>  #> $rounding_decimals #> [1] 2 #>  #> $generate_csvs #> [1] TRUE #>  #> $trend_threshold #> [1] 0.15 #>"},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate input EpiTrax data — validate_data","title":"Validate input EpiTrax data — validate_data","text":"'validate_data' checks data expected columns data types, removes unneeded columns, returns resulting data. Missing NA values removed warning. Valid data must include following columns (types): patient_mmwr_year (integer) patient_mmwr_week (integer) patient_disease (character)","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate input EpiTrax data — validate_data","text":"","code":"validate_data(data)"},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate input EpiTrax data — validate_data","text":"data Dataframe. EpiTrax data validate.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate input EpiTrax data — validate_data","text":"validated data unneeded columns removed.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate input EpiTrax data — validate_data","text":"","code":"df <- data.frame(   patient_mmwr_year = 2020L,   patient_mmwr_week = 1L,   patient_disease = \"A\" ) validate_data(df) #>   patient_mmwr_year patient_mmwr_week patient_disease #> 1              2020                 1               A"},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_epitrax.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate EpiTrax object — validate_epitrax","title":"Validate EpiTrax object — validate_epitrax","text":"validate_epitrax checks EpiTrax object valid.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_epitrax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate EpiTrax object — validate_epitrax","text":"","code":"validate_epitrax(epitrax, report.check = TRUE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_epitrax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate EpiTrax object — validate_epitrax","text":"epitrax Object class epitrax. report.check Logical indicating whether check report-related fields.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_epitrax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate EpiTrax object — validate_epitrax","text":"NULL valid, otherwise throws error.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_epitrax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate EpiTrax object — validate_epitrax","text":"","code":"epitrax <- structure(   list(     data = c(1,2,3),     config = list(rounding_decimals = 2, generate_csvs = TRUE),     report_diseases = list(internal = \"internal_list\", public = \"public_list\")   ),   class = \"epitrax\" ) validate_epitrax(epitrax, report.check = TRUE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_filesystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate filesystem structure — validate_filesystem","title":"Validate filesystem structure — validate_filesystem","text":"validate_filesystem checks filesystem structure valid.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_filesystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate filesystem structure — validate_filesystem","text":"","code":"validate_filesystem(fsys)"},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_filesystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate filesystem structure — validate_filesystem","text":"fsys List. Contains paths report folders elements: internal: Folder internal reports public: Folder public reports","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_filesystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate filesystem structure — validate_filesystem","text":"NULL valid, otherwise throws error.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/validate_filesystem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate filesystem structure — validate_filesystem","text":"","code":"fsys <- list(   internal = \"internal_reports\",   public = \"public_reports\" ) validate_filesystem(fsys)"},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write report CSV files — write_report_csv","title":"Write report CSV files — write_report_csv","text":"write_report_csv writes given data specified folder given filename.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write report CSV files — write_report_csv","text":"","code":"write_report_csv(data, filename, folder)"},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write report CSV files — write_report_csv","text":"data Dataframe. Report data. filename String. Report filename. folder Filepath. Report destination folder.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write report CSV files — write_report_csv","text":"NULL.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write report CSV files — write_report_csv","text":"","code":"# Create sample data r_data <- data.frame(   Disease = c(\"Measles\", \"Chickenpox\"),   Counts = c(20, 43) )  # Write to temporary directory write_report_csv(r_data, \"report.csv\", tempdir()) unlink(file.path(tempdir(), \"report.csv\"), recursive = TRUE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Write general PDF report of disease stats from R Markdown template — write_report_pdf","title":"Write general PDF report of disease stats from R Markdown template — write_report_pdf","text":"write_report_pdf renders report PDF using R Markdown template. relatively flexible can used various types report.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write general PDF report of disease stats from R Markdown template — write_report_pdf","text":"","code":"write_report_pdf(data, params, filename, folder, trend.only = FALSE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write general PDF report of disease stats from R Markdown template — write_report_pdf","text":"data Dataframe. Report data. params List. Report parameters containing: title: Report title (defaults \"Disease Report\") report_year: Report year (defaults 2025) report_month: Report month (defaults 1) trend_threshold: Threshold trend calculations (defaults 0.15) filename String. Report filename. folder Filepath. Report destination folder. trend.Logical. Whether show trend PDF report. TRUE, \"trend_only_\" prepended filename.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_pdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write general PDF report of disease stats from R Markdown template — write_report_pdf","text":"NULL (called side effects - creates report file).","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_pdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write general PDF report of disease stats from R Markdown template — write_report_pdf","text":"","code":"# Don't run PDF examples in case missing LaTeX if (FALSE) { # \\dontrun{  # Create sample report data  r_data <- data.frame(    Disease = c(\"COVID\", \"Flu\", \"Measles\"),    `March 2024` = c(0, 25, 5),    `Historical March Avg` = c(0, 15, 8),    `Trend` = compute_trend(c(0, 25, 5), c(0, 15, 8)),    check.names = FALSE  )   # Set report parameters  params <- list(    title = \"Monthly Disease Surveillance Report\",    report_year = 2024,    report_month = 3,    trend_threshold = 0.20  )   # Write to temporary directory  write_report_pdf(    data = r_data,    params = params,    filename = \"monthly_disease_report.pdf\",    folder = tempdir()  ) } # }"},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_pdf_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Write PDF grouped report from R Markdown template — write_report_pdf_grouped","title":"Write PDF grouped report from R Markdown template — write_report_pdf_grouped","text":"write_report_pdf_grouped renders grouped disease statistics report PDF using R Markdown template. report includes comprehensive disease statistics organized groups current historical data.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_pdf_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write PDF grouped report from R Markdown template — write_report_pdf_grouped","text":"","code":"write_report_pdf_grouped(data, params, filename, folder, trend.only = FALSE)"},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_pdf_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write PDF grouped report from R Markdown template — write_report_pdf_grouped","text":"data Dataframe. Report data. params List. Report parameters containing: title: Report title (defaults \"Grouped Report\") report_year: Report year (defaults 2025) report_month: Report month (defaults 1) trend_threshold: Threshold trend calculations (defaults 0.15) filename String. Report filename. folder Filepath. Report destination folder. trend.Logical. Whether show trend PDF report. TRUE, \"trend_only_\" prepended filename.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_pdf_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write PDF grouped report from R Markdown template — write_report_pdf_grouped","text":"NULL (called side effects - creates report file).","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_pdf_grouped.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write PDF grouped report from R Markdown template — write_report_pdf_grouped","text":"","code":"# Don't run PDF examples in case missing LaTeX if (FALSE) { # \\dontrun{  # Create sample grouped report data  r_data <- data.frame(    Group = c(\"Respiratory\", \"Respiratory\", \"Vaccine-Preventable\"),    Disease = c(\"COVID\", \"Flu\", \"Measles\"),    `March 2024` = c(0, 25, 5),    `March 2024 Rate` = c(0, 25, 5),    `Historical March Avg` = c(0, 15, 8),    `Historical March Median` = c(0, 15, 8),    `2024 YTD` = c(0, 37, 9),    `Historical 2024 YTD Avg` = c(20, 25, 14),    `Historical 2024 YTD Median` = c(20, 25, 14),    `YTD Trend` = compute_trend(c(0, 37, 9), c(20, 25, 14)),    check.names = FALSE  )   # Set report parameters  params <- list(    title = \"Grouped Disease Surveillance Report\",    report_year = 2024,    report_month = 3,    trend_threshold = 0.20  )   # Write to temporary directory  write_report_pdf_grouped(    data = r_data,    params = params,    filename = \"grouped_disease_report.pdf\",    folder = tempdir()  ) } # }"},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Write report Excel files — write_report_xlsx","title":"Write report Excel files — write_report_xlsx","text":"write_report_xlsx writes given data specified folder given filename Excel (.xlsx) format.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write report Excel files — write_report_xlsx","text":"","code":"write_report_xlsx(data, filename, folder)"},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write report Excel files — write_report_xlsx","text":"data List. Named list dataframes. name used sheet name. filename String. Report filename. folder Filepath. Report destination folder.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write report Excel files — write_report_xlsx","text":"NULL.","code":""},{"path":"https://epiforesite.github.io/epitraxr/reference/write_report_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write report Excel files — write_report_xlsx","text":"","code":"# Create sample data with multiple sheets r_data1 <- data.frame(   Disease = c(\"Measles\", \"Chickenpox\"),   Counts = c(20, 43) ) r_data2 <- data.frame(   Disease = c(\"Measles\", \"Chickenpox\"),   Rate = c(10.5, 22.7) ) r_xl <- list(   counts = r_data1,   rates = r_data2 )  # Write to temporary directory write_report_xlsx(r_xl, \"report.xlsx\", tempdir()) unlink(file.path(tempdir(), \"report.xlsx\"), recursive = TRUE)"},{"path":"https://epiforesite.github.io/epitraxr/news/index.html","id":"epitraxr-050","dir":"Changelog","previous_headings":"","what":"epitraxr 0.5.0","title":"epitraxr 0.5.0","text":"Add formatted PDF reports Add option produce trend-PDF reports Update installation instructions README Increase file upload size limit Shiny app get_trend() -> compute_trend() get_epitrax() -> create_epitrax_from_file() epitrax_add_report_diseases() -> epitrax_set_report_diseases() read_report_config() -> get_report_config() get_report_disease_lists() -> get_report_diseases() get_internal_disease_list() -> get_report_diseases_internal() get_public_disease_list() -> get_report_diseases_public() format_week_num() -> mmwr_week_to_month() format_epitrax_data() (separated different functionality two functions) write_grouped_report_pdf() -> write_report_pdf_grouped()","code":""},{"path":[]},{"path":"https://epiforesite.github.io/epitraxr/news/index.html","id":"major-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"epitraxr 0.4.0","text":"Add Shiny app package","code":""},{"path":"https://epiforesite.github.io/epitraxr/news/index.html","id":"minor-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"epitraxr 0.4.0","text":"Allow user choose many years data include reports (defaults 5 + latest year) Rename prep_report_data() standardize_report_diseases() Add vignette(\"piped-mode\") Update vignette(\"epitraxr\") clearer language examples","code":""},{"path":"https://epiforesite.github.io/epitraxr/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"epitraxr 0.4.0","text":"Fix bug epitrax_write_xlsxs() write Excel sheets even report lists empty","code":""},{"path":"https://epiforesite.github.io/epitraxr/news/index.html","id":"epitraxr-032","dir":"Changelog","previous_headings":"","what":"epitraxr 0.3.2","title":"epitraxr 0.3.2","text":"Create grouped reports Enable PDF output reports Add threshold parameter get_trend() Add new report combining monthly YTD stats Complete R package checklist","code":""},{"path":"https://epiforesite.github.io/epitraxr/news/index.html","id":"epitraxr-022","dir":"Changelog","previous_headings":"","what":"epitraxr 0.2.2","title":"epitraxr 0.2.2","text":"Minor fixes verify piped script matches original script behavior","code":""},{"path":"https://epiforesite.github.io/epitraxr/news/index.html","id":"epitraxr-021","dir":"Changelog","previous_headings":"","what":"epitraxr 0.2.1","title":"epitraxr 0.2.1","text":"Add method setting config programmatically","code":""},{"path":"https://epiforesite.github.io/epitraxr/news/index.html","id":"epitraxr-020","dir":"Changelog","previous_headings":"","what":"epitraxr 0.2.0","title":"epitraxr 0.2.0","text":"Fully support pipe operator add report generation functions EpiTrax object","code":""},{"path":"https://epiforesite.github.io/epitraxr/news/index.html","id":"epitraxr-013","dir":"Changelog","previous_headings":"","what":"epitraxr 0.1.3","title":"epitraxr 0.1.3","text":"Add pkgdown website Create new EpiTrax data object","code":""},{"path":"https://epiforesite.github.io/epitraxr/news/index.html","id":"epitraxr-010","dir":"Changelog","previous_headings":"","what":"epitraxr 0.1.0","title":"epitraxr 0.1.0","text":"Initial release epitraxr package Core modules: Data Processing, Report Generation, Filesystem Management, Helper Functions Sample data included testing demonstration purposes Comprehensive testing tinytest framework Full roxygen documentation functions","code":""}]
